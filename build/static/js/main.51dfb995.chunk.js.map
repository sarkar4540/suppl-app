{"version":3,"sources":["connect.js","components/dashboard.js","components/drawer.js","components/management.js","components/cash.js","components/profile.js","App.js","serviceWorker.js","index.js"],"names":["URL","window","location","hostname","instance","Connect","setRootState","this","token","localStorage","getItem","uid","console","log","JSON","parse","fetch","method","res","status","json","data","phone","password","headers","body","stringify","user","id","setItem","loggedIn","profile","internet","balance","message","companyName","companyPan","pan","address","city","district","state","pinCode","aadhaar","gstin","tan","latitude","longitude","ekycDoc","logOut","name","email","mobile","allowAdd","retailer","per_commission","fix_commission","whitelabel","query","customer_aadhaar","customer_email","customer_name","customer_mobile","bank_id","amount","rdData","accountNumber","ifsCode","from","to","list","commissions","logo","instructions","colors","upload","cid","accepted","customer","clear","getConnectInstance","Statistics","props","theme","useTheme","useState","text","num","stats","total_txn","count","i","statVal","setStatVal","useEffect","interval","setInterval","your_txn","your_commission","sum","length","clearInterval","style","background","palette","info","main","color","contrastText","margin","padding","display","flexWrap","justifyContent","Typography","variant","width","toUpperCase","flex","company","gutterBottom","company_name","pincode","Apps","secondary","dark","type","IconButton","component","Link","fontSize","Done","merchant_id","Money","ImportExport","onClick","Heading","square","primary","textAlign","src","site","maxWidth","maxHeight","Partners","t","val","setVal","vals","height","PartnersPan","alignItems","Instructions","light","dangerouslySetInnerHTML","__html","useStyles","makeStyles","root","drawer","breakpoints","up","flexShrink","appBar","marginLeft","footer","menuButton","marginRight","spacing","title","textDecoration","toolbar","mixins","drawerPaper","content","flexGrow","overflowX","marginBottom","ResponsiveDrawer","classes","React","mobileOpen","setMobileOpen","useLocation","handleDrawerToggle","handleDrawerClose","propsGen","now","then","selected","colorGen","className","List","ListItem","pathname","button","ListItemIcon","ListItemText","Divider","DoneAllRounded","container","undefined","document","CssBaseline","AppBar","Toolbar","aria-label","edge","Hidden","smDown","implementation","noWrap","smUp","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","children","geoData","success","LocationOn","error","LocationOff","rdDetails","deviceinfo","Fingerprint","dpId","NetworkCell","SignalCellularConnectedNoInternet0Bar","Users","newUserDialog","changeUserDialog","userList","registerCompany","setState","loadUserList","fullWidth","elevation","backgroundColor","align","TextField","label","size","value","onChange","e","target","InputProps","startAdornment","InputAdornment","position","allow_add","Button","map","toLowerCase","indexOf","UserCard","handleClick","ChangeUser","typeU","perUCommission","fixUCommission","handleClose","NewUser","perCommission","fixCommission","Component","RegisterCompany","setCompanyName","setCompanyPan","setPan","setAddress","setCity","setDistrict","setPinCode","setAadhaar","setGstin","setTan","setEkycDoc","enabled2","setEnabled2","setMessage","Dialog","flexDirection","disabled","FormControl","marginTop","InputLabel","Select","states","stateCode","MenuItem","stateId","multiple","onDone","files","dir","test","base64","geodata","a","fontWeight","padStart","Edit","href","url","Public","Phone","AndroidRDService","WhatsApp","Mail","slabLabels","setEmail","setWhitelabel","setStatus","split","perCommission_t","setPerCommmission","fixCommission_t","setFixCommmission","aria-labelledby","DialogContent","DialogContentText","FormControlLabel","control","Switch","checked","DialogActions","updateUser","join","setName","setMobile","setAllowAdd","DialogTitle","addUser","rdServiceInstance","RDService","rdInfoCallback","rdCaptureCallback","capture_path","info_path","port","busy","startRDInfo","cache","xmlDataToJSON","normalizeTags","mergeAttrs","explicitArray","dataXML","rdservice","interface","iface","path","res2","data2","finishRDInfo","xml","startRDCapture","finishRDCapture","getRDService","AEPS_t","adhaar","satisfied","bank","next","changeEnabled","changeEnabled2","rdService","getCustomer","bankDetails","iinno","bankName","Grid","item","makeWithdrawl","enquireBalance","miniStatement","enabled","encodeURIComponent","xs","AEPS","withTheme","Transactions_t","today","Date","tomorrow","setDate","getDate","toISOString","slice","transactions","fetchTransactions","justify","defaultValue","InputLabelProps","shrink","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","row","timestamp","user_id","key","scope","fingpayTransactionId","transactionAmount","balanceAmount","colSpan","Transactions","Balance_t","addBalance","uploadReceipt","addBalanceAmount","fetchCommissions","paddingBottom","Paper","tid","commission","Balance","AddBalance_t","viewDoc","fetchAddRequests","OpenInBrowser","approveBalance","Cancel","AddBalance","DMT_t","transferType","limit","charge","fetchTransfers","parseInt","Math","ceil","makePayment","result","substring","DMT","Profile","repassword","setRepassword","newpassword","setNewpassword","setEnabled","setRegisterCompany","changePasswordShow","setChangePasswordShow","merchant","whiteLabelName","setWhiteLabelName","whiteLabelInstructions","setWhiteLabelInstructions","warning","setColorA","setColor","whiteLabelImage","setWhiteLabelImage","lg","crypto","createHash","update","digest","changePassword","editor","ClassicEditor","event","getData","initialValue","c","color2","hex","saveWhiteLabel","company_pan","LogIn","setPassword","setPhone","Avatar","left","transform","logIn","forgotPassword","App","bind","timedRDChecker","timedNetChecker","statusCode","navigator","geolocation","getCurrentPosition","coords","timeout","rdTimer","netTimer","details","getSite","createMuiTheme","ThemeProvider","exact","alignContent","Boolean","match","rDService","protocol","assign","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.51dfb995.chunk.js","sourcesContent":["let test = false;\n\nconst SERVER_HOST = window.location.hostname;\n\nconst SERVER_PORT = '3000';\nlet URL = \"//\" + SERVER_HOST + (SERVER_PORT ? \":\" + SERVER_PORT : \"\");\n\nURL = test ? URL : \"https://minibank.co.in\";\n\nvar instance = null;\nclass Connect {\n    constructor(setRootState) {\n        this.token = localStorage.getItem(\"token\");\n        this.uid = localStorage.getItem(\"uid\");\n        this.setRootState = setRootState;\n        console.log(URL);\n        if (setRootState) setRootState(JSON.parse(localStorage.getItem(\"state\")));\n    }\n    async getSite() {\n        let res = await fetch(URL + \"/i\", {\n            method: \"GET\"\n        });\n        if (res.status === 200) {\n            let data = await res.json();\n            return data;\n        }\n        else return null;\n    }\n    async logIn(phone, password) {\n        try {\n            let res = await fetch(URL + \"/log_in\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ phone, password })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.token && data.user) {\n                    this.token = data.token;\n                    this.uid = data.user.id;\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"uid\", data.user.id);\n                    localStorage.setItem(\"state\", JSON.stringify({ loggedIn: true, profile: data.user, internet: true }));\n                    if (this.setRootState) {\n                        this.setRootState({ loggedIn: true, profile: data.user, internet: true, balance: data.user.balance });\n                    }\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async forgotPassword(phone) {\n        try {\n            let res = await fetch(URL + \"/forgot_password\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ phone })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async changePassword(password) {\n        try {\n            let res = await fetch(URL + \"/change_password\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ password })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.token && data.user) {\n                    this.token = data.token;\n                    this.uid = data.user.id;\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"uid\", data.user.id);\n                    data.message = \"Password change successful!\";\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async registerCompany(companyName, companyPan, pan, address, city, district, state, pinCode, aadhaar, gstin, tan, latitude, longitude, ekycDoc) {\n        try {\n            let res = await fetch(URL + \"/register_company\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ companyName, companyPan, pan, address, city, district, state, pinCode, aadhaar, gstin, tan, latitude, longitude, ekycDoc })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async addUser(name, email, mobile, allowAdd, retailer) {\n        try {\n            let res = await fetch(URL + \"/create_user\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ name, email, mobile, allowAdd, retailer })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async updateUser(email, mobile, status, per_commission, fix_commission, whitelabel) {\n        try {\n            let res = await fetch(URL + \"/update_user\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ email, mobile, status, per_commission, fix_commission, whitelabel })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async userList(query) {\n        try {\n            let res = await fetch(URL + \"/list_users\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ query })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async makeWithdrawl(customer_aadhaar, customer_email, customer_name, customer_mobile, bank_id, amount, rdData, { latitude, longitude }) {\n        try {\n            let res = await fetch(URL + \"/make_withdrawl\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ customer_aadhaar, customer_email, customer_name, customer_mobile, bank_id, amount, rdData, latitude, longitude })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                if (data.balance) {\n                    localStorage.setItem(\"state\", JSON.stringify({ ...JSON.parse(localStorage.getItem(\"state\")), balance: data.balance }));\n                    await this.setRootState({ balance: data.balance });\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async makePayment(name, amount, accountNumber, ifsCode) {\n        try {\n            let res = await fetch(URL + \"/make_payment\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ amount, accountNumber, ifsCode, name })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                if (data.balance) {\n                    localStorage.setItem(\"state\", JSON.stringify({ ...JSON.parse(localStorage.getItem(\"state\")), balance: data.balance }));\n                    await this.setRootState({ balance: data.balance });\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async enquireBalance(customer_aadhaar, customer_email, customer_name, customer_mobile, bank_id, rdData, { latitude, longitude }) {\n        try {\n            let res = await fetch(URL + \"/check_balance\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ customer_aadhaar, customer_email, customer_name, customer_mobile, bank_id, rdData, latitude, longitude })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async miniStatement(customer_aadhaar, customer_email, customer_name, customer_mobile, bank_id, rdData, { latitude, longitude }) {\n        try {\n            let res = await fetch(URL + \"/mini_statement\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ customer_aadhaar, customer_email, customer_name, customer_mobile, bank_id, rdData, latitude, longitude })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return await res.json();\n        }\n        catch (e) {\n            return { status: \"FAILURE\", message: \"Error during processing/transmission. Please check your connecttivity. If the problem persists, contact administrator.\" }\n        }\n    }\n    async fetchTransactions(from, to) {\n        try {\n            let res = await fetch(URL + \"/fetch_transactions\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ from, to })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data.list;\n            }\n            else return [];\n        }\n        catch (e) {\n            return [];\n        }\n    }\n    async fetchCommissions(from, to) {\n        try {\n            let res = await fetch(URL + \"/fetch_commissions\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ from, to })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                if (data.balance) {\n                    localStorage.setItem(\"state\", JSON.stringify({ ...JSON.parse(localStorage.getItem(\"state\")), balance: data.balance }));\n                    await this.setRootState({ balance: data.balance });\n                }\n                return data;\n            }\n            else return { commissions: [], balance: null };\n        }\n        catch (e) {\n            return { commissions: [], balance: null };\n        }\n    }\n    async fetchAddRequests() {\n        try {\n            let res = await fetch(URL + \"/fetch_add_requests\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({})\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return { commissions: [], balance: null };\n        }\n        catch (e) {\n            return { commissions: [], balance: null };\n        }\n    }\n    async fetchTransfers() {\n        try {\n            let res = await fetch(URL + \"/fetch_transfers\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({})\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                if (data.balance) {\n                    localStorage.setItem(\"state\", JSON.stringify({ ...JSON.parse(localStorage.getItem(\"state\")), balance: data.balance }));\n                    await this.setRootState({ balance: data.balance });\n                }\n                return data;\n            }\n            else return { commissions: [], balance: null };\n        }\n        catch (e) {\n            return { commissions: [], balance: null };\n        }\n    }\n\n    async saveWhiteLabel(name, logo, instructions, colors) {\n        try {\n            let res = await fetch(URL + \"/update_whitelabel\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ name, logo, instructions, colors })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return { message: \"Update Failed!\" };\n        }\n        catch (e) {\n            return { message: \"Update Failed!\" };\n        }\n    }\n    async addBalance(amount, upload) {\n        try {\n            let res = await fetch(URL + \"/add_balance\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ amount, upload })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return { message: \"Request Failed!\" };\n        }\n        catch (e) {\n            return { message: \"Request Failed!\" };\n        }\n    }\n    async approveBalance(cid, accepted) {\n        try {\n            let res = await fetch(URL + \"/approve_balance\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ cid, accepted })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data;\n            }\n            else return { message: \"Request Failed!\" };\n        }\n        catch (e) {\n            return { message: \"Request Failed!\" };\n        }\n    }\n    async getCustomer(customer_aadhaar, customer_mobile) {\n        try {\n            let res = await fetch(URL + \"/get_customer\", {\n                method: \"POST\",\n                headers: { 'Content-Type': 'application/json', uid: this.uid, token: this.token },\n                body: JSON.stringify({ customer_aadhaar, customer_mobile })\n            });\n            if (res.status === 200) {\n                let data = await res.json();\n                if (data.status === \"AUTHFAILURE\") {\n                    this.logOut();\n                }\n                return data.customer;\n            }\n            else return null;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    isLoggedIn() {\n        return this.token && this.uid;\n    }\n    logOut() {\n        this.token = null;\n        this.uid = null;\n        localStorage.clear();\n        if (this.setRootState) this.setRootState({ loggedIn: false, profile: null });\n    }\n}\nfunction getConnectInstance(setRootState) {\n    if (setRootState) {\n        instance = new Connect(setRootState);\n    }\n    return instance;\n}\n\nexport { Connect, getConnectInstance };","import React, { useState, useEffect } from 'react';\nimport { Paper, Typography, Grid, Divider, IconButton, useTheme } from '@material-ui/core';\nimport { LocalAtm, SupervisorAccount, History, AccountBalanceWallet, AccountCircle, Lock, Done, Money, ImportExport } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport { getConnectInstance } from '../connect';\n\nfunction Statistics(props) {\n    let theme = useTheme();\n    let [statVal, setStatVal] = useState({ text: \"Total transactions this month\", num: props.profile.stats.total_txn.count, i: 0 });\n    useEffect(() => {\n        let interval = setInterval(() => {\n            let stats = [\n                { text: \"Total transactions this month\", num: props.profile.stats.total_txn.count },\n                { text: \"Your transactions this month\", num: props.profile.stats.your_txn.count },\n                { text: \"Your commission this month\", num: props.profile.stats.your_commission.sum ? props.profile.stats.your_commission.sum : 0 }\n            ]\n            setStatVal({ ...stats[statVal.i % stats.length], i: statVal.i + 1 })\n        }, 3000)\n        return () => {\n            clearInterval(interval);\n        }\n    });\n    return (\n        <div style={{ background: theme.palette.info.main, color: theme.palette.info.contrastText }}>\n            <div style={{ margin: 0, padding: \"50px 15px\", display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-evenly\" }}>\n                <div>\n                    <Typography variant=\"body1\" style={{ width: \"320px\" }}>{statVal.text.toUpperCase()}</Typography>\n                    <Typography variant=\"h3\" style={{ flex: 1 }}>{statVal.num}</Typography>\n                </div>\n                {\n                    props.profile && props.profile.company ?\n                        <div>\n                            <Typography gutterBottom variant=\"h4\">\n                                {props.profile.company.company_name}\n                            </Typography>\n                            <Typography variant=\"body1\">\n                                Phone: {props.profile.company.phone}\n                            </Typography>\n                            {props.profile.company.gstin ?\n                                <Typography variant=\"body1\">\n                                    GSTIN: {props.profile.company.gstin}\n                                </Typography>\n                                : null\n                            }\n                            <Typography gutterBottom variant=\"body1\">\n                                {props.profile.company.address}, {props.profile.company.state} (PIN : {props.profile.company.pincode})\n                </Typography></div> : null\n                }\n            </div>\n        </div >\n    )\n}\n\nfunction Apps(props) {\n    let theme = useTheme();\n    return <div style={{ background: theme.palette.secondary.dark, padding: \"15px\" }} >\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\" }}>\n            {props.profile.type < 99 ?\n                <div>\n                    <IconButton style={{ color: theme.palette.secondary.contrastText }} component={Link} to=\"/management\"><SupervisorAccount style={{ fontSize: \"4em\" }} /></IconButton>\n                    <div style={{ color: theme.palette.secondary.contrastText }} >Management</div>\n                </div> : null}\n            {props.profile.type === 0 ?\n                <div>\n                    <IconButton style={{ color: theme.palette.secondary.contrastText }} component={Link} to=\"/approve\"><Done style={{ fontSize: \"4em\" }} /></IconButton>\n                    <div style={{ color: theme.palette.secondary.contrastText }}>Approve Requests</div>\n                </div> : null}\n            {props.profile.merchant_id ?\n                <div>\n                    <IconButton style={{ color: theme.palette.secondary.contrastText }} component={Link} to=\"/cash\"><Money style={{ fontSize: \"4em\" }} /></IconButton>\n                    <div style={{ color: theme.palette.secondary.contrastText }}>AePS</div>\n                </div> : null}\n            {props.profile.merchant_id ?\n                <div>\n                    <IconButton style={{ color: theme.palette.secondary.contrastText }} component={Link} to=\"/history\"><History style={{ fontSize: \"4em\" }} /></IconButton>\n                    <div style={{ color: theme.palette.secondary.contrastText }} >Transactions</div>\n                </div> : null}\n            <div>\n                <IconButton style={{ color: theme.palette.secondary.contrastText }} component={Link} to=\"/transfer\"><ImportExport style={{ fontSize: \"4em\" }} /></IconButton>\n                <div style={{ color: theme.palette.secondary.contrastText }}>Transfer</div>\n            </div>\n            <div>\n                <IconButton style={{ color: theme.palette.secondary.contrastText }} component={Link} to=\"/balance\"><AccountBalanceWallet style={{ fontSize: \"4em\" }} /></IconButton>\n                <div style={{ color: theme.palette.secondary.contrastText }}>Wallet</div>\n            </div>\n            <div>\n                <IconButton style={{ color: theme.palette.secondary.contrastText }} component={Link} to=\"/account\"><AccountCircle style={{ fontSize: \"4em\" }} /></IconButton>\n                <div style={{ color: theme.palette.secondary.contrastText }}>Account</div>\n            </div>\n            <div>\n                <IconButton style={{ color: theme.palette.secondary.contrastText }} onClick={() => { getConnectInstance(false).logOut() }}><Lock style={{ fontSize: \"4em\" }} /></IconButton>\n                <div style={{ color: theme.palette.secondary.contrastText }}>Log Out</div>\n            </div>\n        </div>\n    </div>\n}\nfunction Heading(props) {\n    let theme = useTheme();\n    return (<div square style={{ background: theme.palette.primary.contrastText, padding: \"15px\", textAlign: \"center\" }}>\n        <img src={((props.profile && props.profile.whitelabel) ? props.profile.whitelabel.logo : (props.site ? props.site.logo : null))} style={{ maxWidth: \"480px\", maxHeight: \"150px\" }} />\n\n        <Typography style={{ color: theme.palette.primary.main }} variant=\"h3\">\n            {(props.profile.type === 0 ? \"Super Administrator\" : props.profile.type === 1 ? \"Administrator\" : props.profile.type === 2 ? \"Super Distributor\" : props.profile.type === 3 ? \"Distributor\" : props.profile.type === 99 ? \"Retailer\" : \"Sub Distributor\").toUpperCase()}\n        </Typography>\n    </div>)\n}\nfunction Partners(props) {\n    let theme = useTheme();\n    let [val, setVal] = useState({ t: \"./partners/p1.png\", i: 1 });\n    useEffect(() => {\n        let interval = setInterval(() => {\n            let vals = [\n                \"./partners/p1.png\",\n                \"./partners/p2.png\",\n                \"./partners/p3.png\"\n            ]\n            setVal({ t: vals[val.i % vals.length], i: val.i + 1 })\n        }, 2000)\n        return () => {\n            clearInterval(interval);\n        }\n    });\n    return <div style={{ width: \"180px\", height: \"60px\" }} ><img src={val.t} style={{ maxWidth: \"150px\", maxHeight: \"60px\" }} /></div>\n}\nfunction PartnersPan(props) {\n    let theme = useTheme();\n    return (<div style={{ padding: \"24px 5px\" }}>\n        <div square style={{ padding: \"0 25px\", margin: \"0 auto\", maxWidth: \"720px\", display: \"flex\", flexWrap: \"wrap\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n            <img src=\"./partners/p1.png\" style={{ margin: \"10px\", maxWidth: \"150px\" }} />\n            <img src=\"./partners/p2.png\" style={{ margin: \"10px\", maxWidth: \"120px\" }} />\n            <img src=\"./partners/p3.png\" style={{ margin: \"10px\", maxWidth: \"120px\" }} />\n        </div></div>)\n}\nfunction Instructions(props) {\n    let theme = useTheme();\n    return (<div square style={{ height: \"100%\", background: theme.palette.info.light, color: theme.palette.info.contrastText, padding: \"15px\" }}>\n        <Typography variant=\"h4\">\n            Instructions\n            </Typography>\n        <div\n            style={{ textAlign: \"center\" }}\n            dangerouslySetInnerHTML={{ __html: ((props.profile && props.profile.whitelabel) ? props.profile.whitelabel.instructions : (props.site ? props.site.instructions : \"Welcome to Mini Bank!\")) }}\n        ></div>\n    </div>)\n}\nexport { Statistics, Instructions, Apps, Heading, Partners, PartnersPan };","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport HistoryIcon from '@material-ui/icons/History';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport { getConnectInstance } from '../connect';\nimport { Partners } from './dashboard';\nimport { LocationOff, LocationOn, Fingerprint, SignalCellularConnectedNoInternet0Bar, NetworkCell, DoneAllRounded, Money, ImportExport } from '@material-ui/icons';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n        position: \"fixed\"\n    },\n    footer: {\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n        position: \"fixed\",\n        bottom: 0\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        }\n    },\n    title: {\n        textDecoration: 'none',\n    },\n    toolbar: { ...theme.mixins.toolbar },\n    list: { background: theme.palette.secondary.main, color: theme.palette.secondary.contrastText },\n    drawerPaper: {\n        width: drawerWidth,\n        background: theme.palette.secondary.main\n    },\n    content: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        flexGrow: 1,\n        overflowX: \"hidden\",\n        marginBottom: theme.spacing(2)\n    },\n}));\n\nfunction ResponsiveDrawer(props) {\n    const { window } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const location = useLocation();\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n    const handleDrawerClose = () => {\n        setMobileOpen(false);\n    };\n    let propsGen = (now, then) => {\n        if (now === then) {\n            return { style: { background: theme.palette.primary.main, color: theme.palette.primary.contrastText }, to: then, selected: true, onClick: handleDrawerClose };\n        }\n        else return { style: { color: theme.palette.secondary.contrastText }, to: then, onClick: handleDrawerClose };\n    }\n    let colorGen = (now, then) => {\n        if (now === then) {\n            return { style: { color: theme.palette.primary.contrastText }, color: theme.palette.primary.contrastText };\n        }\n        else return { style: { color: theme.palette.secondary.contrastText }, color: theme.palette.secondary.contrastText };\n    }\n\n    const drawer = (\n        <div>\n            <div className={classes.toolbar} style={{ background: theme.palette.secondary.main }} >\n                <List className={classes.list}>\n                    <ListItem color=\"secondary\" component={Link} {...propsGen(location.pathname, \"/\")} button>\n                        <ListItemIcon><AppsIcon {...colorGen(location.pathname, \"/\")} /></ListItemIcon>\n                        <ListItemText primary={props.loggedIn ? \"Home\" : \"Log In\"} />\n                    </ListItem>\n                </List>\n\n            </div>\n            <Divider />\n            {props.loggedIn && props.profile ?\n                <div>\n                    <List className={classes.list}>\n                        <ListItem component={Typography} style={{ color: theme.palette.secondary.contrastText }} variant=\"caption\">\n                            {props.profile.type === 0 ? \"Super Administrator\" : props.profile.type === 1 ? \"Administrator\" : props.profile.type === 2 ? \"Super Distributor\" : props.profile.type === 3 ? \"Distributor\" : props.profile.type === 99 ? \"Retailer\" : \"Sub Distributor\"}\n                        </ListItem>\n                        {props.profile.type === 0 ?\n                            <ListItem button component={Link}  {...propsGen(location.pathname, \"/approve\")}>\n                                <ListItemIcon><DoneAllRounded {...colorGen(location.pathname, \"/approve\")} /></ListItemIcon>\n                                <ListItemText primary={\"Approve Requests\"} />\n                            </ListItem> : null}\n                        {props.profile.type < 99 ?\n                            <ListItem component={Link} {...propsGen(location.pathname, \"/management\")} button>\n                                <ListItemIcon><SupervisorAccountIcon {...colorGen(location.pathname, \"/management\")} /></ListItemIcon>\n                                <ListItemText primary={\"Management\"} />\n                            </ListItem> : null}\n                        {props.profile.merchant_id ?\n                            <ListItem button component={Link} {...propsGen(location.pathname, \"/cash\")}>\n                                <ListItemIcon><Money {...colorGen(location.pathname, \"/cash\")} /></ListItemIcon>\n                                <ListItemText primary={\"AePS\"} />\n                            </ListItem> : null}\n                        {props.profile.merchant_id ?\n                            <ListItem button component={Link}  {...propsGen(location.pathname, \"/history\")}>\n                                <ListItemIcon><HistoryIcon {...colorGen(location.pathname, \"/history\")} /></ListItemIcon>\n                                <ListItemText primary={\"Transactions\"} />\n                            </ListItem> : null}\n                        <ListItem button component={Link}  {...propsGen(location.pathname, \"/balance\")}>\n                            <ListItemIcon><AccountBalanceWalletIcon {...colorGen(location.pathname, \"/balance\")} /></ListItemIcon>\n                            <ListItemText primary={\"Wallet\"} />\n                        </ListItem>\n                        <ListItem button component={Link}  {...propsGen(location.pathname, \"/transfer\")}>\n                            <ListItemIcon><ImportExport {...colorGen(location.pathname, \"/transfer\")} /></ListItemIcon>\n                            <ListItemText primary={\"Transfer\"} />\n                        </ListItem>\n                    </List>\n                    <Divider />\n                    <List className={classes.list}>\n                        <ListItem style={{ color: theme.palette.secondary.contrastText }} component={Typography} variant=\"caption\">\n                            {props.profile.name}\n                        </ListItem>\n                        <ListItem button component={Link} {...propsGen(location.pathname, \"/account\")}>\n                            <ListItemIcon><AccountCircleIcon {...colorGen(location.pathname, \"/account\")} /></ListItemIcon>\n                            <ListItemText primary={\"Account\"} />\n                        </ListItem>\n                        <ListItem button {...colorGen(location.pathname, \"/log_out\")} onClick={() => { getConnectInstance(false).logOut() }}>\n                            <ListItemIcon><LockIcon {...colorGen(location.pathname, \"/log_out\")} /></ListItemIcon>\n                            <ListItemText primary={\"Log Out\"} />\n                        </ListItem>\n                    </List>\n                </div>\n                :\n                <List className={classes.list}>\n                    <ListItem component={Link} {...propsGen(location.pathname, \"/contact\")} button>\n                        <ListItemIcon><SupervisorAccountIcon {...colorGen(location.pathname, \"/contact\")} /></ListItemIcon>\n                        <ListItemText primary={\"Contact Us\"} />\n                    </ListItem>\n                </List>\n            }\n        </div>\n    );\n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar className={classes.appBar}>\n                <Toolbar style={{ padding: \"3px\", display: \"flex\" }} >\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon style={{ color: theme.palette.primary.contrastText }} />\n                    </IconButton>\n                    {props.profile && props.profile.whitelabel ? <img src={props.profile.whitelabel.logo} style={{ padding: \"5px\", maxWidth: \"360px\", maxHeight: \"60px\" }} /> :\n                        props.site ? <img src={props.site.logo} style={{ padding: \"5px\", maxWidth: \"360px\", maxHeight: \"60px\" }} /> : null}\n\n                    <div style={{ flex: \"1\", display: \"flex\", justifyContent: \"flex-end\" }}>\n                        <Hidden smDown implementation=\"css\">\n                            <Typography style={{ textAlign: \"left\", color: theme.palette.primary.contrastText, padding: \"0 24px\" }} noWrap className={classes.title} variant=\"h6\">\n                                {props.profile ? props.profile.name : \"\"}\n                            </Typography>\n                            <Typography style={{ textAlign: \"left\", color: theme.palette.primary.contrastText, padding: \"0 24px\" }} noWrap className={classes.title} variant=\"body1\">\n                                {props.profile ? \"Balance: \" + props.balance : \"\"}\n                            </Typography>\n                        </Hidden>\n                        <Hidden smDown implementation=\"css\">\n                            <img src=\"./partners/t1.png\" style={{ padding: \"5px 15px\", maxWidth: \"150px\", maxHeight: \"60px\" }} />\n                        </Hidden>\n                    </div>\n                    <Partners />\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                <Hidden smUp implementation=\"css\">\n                    <Drawer\n                        container={container}\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true,\n                        }}\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                {props.children}\n                <div className={classes.footer} style={{ display: 'flex', justifyContent: 'space-evenly', background: theme.palette.primary.main }}>\n                    {props.geoData ? <Typography variant=\"subtitle1\" style={{ background: theme.palette.success.main, color: theme.palette.success.contrastText, padding: \"5px\", margin: \"5px\", display: \"flex\", justifyContent: \"center\" }}><LocationOn /> <Hidden smDown> X: {props.geoData.latitude} Y: {props.geoData.longitude} </Hidden></Typography> : <Typography variant=\"subtitle1\" style={{ background: theme.palette.error.main, color: theme.palette.error.contrastText, padding: \"5px\", margin: \"5px\", display: \"flex\", justifyContent: \"center\" }}><LocationOff /><Hidden smDown>Please turn on and give location permissions.</Hidden></Typography>}\n                    {props.rdDetails.deviceinfo ? <Typography variant=\"subtitle1\" style={{ background: theme.palette.success.main, color: theme.palette.success.contrastText, padding: \"5px\", margin: \"5px\", display: \"flex\", justifyContent: \"center\" }}><Fingerprint /> <Hidden smDown> {props.rdDetails.deviceinfo.dpId} </Hidden></Typography> : <Typography variant=\"subtitle1\" style={{ background: theme.palette.error.main, color: theme.palette.error.contrastText, padding: \"5px\", margin: \"5px\", display: \"flex\", justifyContent: \"center\" }}><Fingerprint /><Hidden smDown>Please connect a registered Biometric device.</Hidden></Typography>}\n                    {props.site ? <Typography variant=\"subtitle1\" style={{ background: theme.palette.success.main, color: theme.palette.success.contrastText, padding: \"5px\", margin: \"5px\", display: \"flex\", justifyContent: \"center\" }}><NetworkCell /> <Hidden smDown> Connected with server </Hidden></Typography> : <Typography variant=\"subtitle1\" style={{ background: theme.palette.error.main, color: theme.palette.error.contrastText, padding: \"5px\", margin: \"5px\", display: \"flex\", justifyContent: \"center\" }}><SignalCellularConnectedNoInternet0Bar /><Hidden smDown>Disconnected from server.</Hidden></Typography>}\n                </div>\n            </main>\n        </div>\n    );\n}\n\nResponsiveDrawer.propTypes = {\n};\n\nexport default ResponsiveDrawer;\n","import React from 'react';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Typography, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, FormControl, InputLabel, Select, MenuItem, IconButton, Paper, Switch, Avatar, useTheme, FormControlLabel, Grid } from '@material-ui/core';\nimport { getConnectInstance } from '../connect';\nimport { Edit, Phone, WhatsApp, Mail, Web, Public } from '@material-ui/icons';\nimport FileBase64 from 'react-file-base64';\nclass Users extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newUserDialog: false,\n            changeUserDialog: false,\n            query: \"\",\n            userList: [],\n            registerCompany: false\n        }\n    }\n    async loadUserList() {\n        let res = await getConnectInstance(false).userList(\"\");\n        if (res.status === \"SUCCESS\") {\n            this.setState({ userList: res.list });\n        }\n    }\n    componentDidMount() {\n        this.loadUserList();\n    }\n    render() {\n        return <div >\n            <div fullWidth elevation={1} style={{ backgroundColor: \"#fff\", padding: \"25px\" }}>\n\n                <Typography variant=\"h4\" align=\"left\" color=\"primary\" gutterBottom>Management</Typography>\n                <div style={{ display: \"flex\" }}>\n                    <TextField\n                        id=\"input-with-icon-textfield\"\n                        label=\"Search users\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        style={{ flex: 1, margin: \"5px\" }}\n                        value={this.state.query}\n                        onChange={e => this.setState({ query: e.target.value })}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    {this.props.allow_add ?\n                        <Button onClick={() => { this.setState({ newUserDialog: { type: this.props.type + 1 } }); }}\n                            style={{ flex: 1, margin: \"5px\" }}\n                            color=\"primary\" variant=\"contained\" aria-label=\"add\">\n                            Add {this.props.type === 0 ? \"Administrator\" : this.props.type === 1 ? \"Super Distributor\" : this.props.type === 2 ? \"Distributor\" : \"Sub Distributor\"}\n                        </Button> : null}\n\n                    {this.props.allow_add ?\n                        <Button onClick={() => { this.setState({ newUserDialog: { type: 99 } }); }}\n                            style={{ flex: 1, margin: \"5px\" }}\n                            color=\"primary\" variant=\"contained\" aria-label=\"add\">\n                            Add Retailer\n                            </Button>\n                        : null}\n\n                </div>\n            </div>\n            {this.state.userList.map(data => {\n\n                if (data.name.toLowerCase().indexOf(this.state.query.toLowerCase()) > -1 || (data.id + '').indexOf(this.state.query) > -1 || data.mobile.indexOf(this.state.query) > -1 || data.email.indexOf(this.state.query) > -1) {\n                    return <div style={{ width: \"100%\" }}>\n                        <UserCard\n                            handleClick={() => { this.setState({ changeUserDialog: data.id }) }}\n                            {...data}\n                        />\n                        <ChangeUser typeU={this.props.type} perUCommission={this.props.per_commission} fixUCommission={this.props.fix_commission} open={this.state.changeUserDialog === data.id} handleClose={() => { this.loadUserList(); this.setState({ changeUserDialog: false }); }} {...data} />\n\n                    </div>\n                }\n            }\n            )}\n            <NewUser type={this.state.newUserDialog ? this.state.newUserDialog.type : 99} perCommission={this.props.per_commission} fixCommission={this.props.fix_commission} open={this.state.newUserDialog} handleClose={() => { this.loadUserList(); this.setState({ newUserDialog: false }); }} />\n\n        </div>\n    }\n}\n\nfunction RegisterCompany(props) {\n    let [companyName, setCompanyName] = React.useState(\"\");\n    let [companyPan, setCompanyPan] = React.useState(\"\");\n    let [pan, setPan] = React.useState(\"\");\n    let [address, setAddress] = React.useState(\"\");\n    let [city, setCity] = React.useState(\"\");\n    let [district, setDistrict] = React.useState(\"\");\n    let [state, setState] = React.useState(\"\");\n    let [pinCode, setPinCode] = React.useState(\"\");\n    let [aadhaar, setAadhaar] = React.useState(\"\");\n    let [gstin, setGstin] = React.useState(\"\");\n    let [tan, setTan] = React.useState(\"\");\n    let [ekycDoc, setEkycDoc] = React.useState(\"\");\n    let [enabled2, setEnabled2] = React.useState(true);\n    let [message, setMessage] = React.useState(\"\");\n    return <Dialog open={props.open} elevation={1}>\n        <div style={{ padding: \"15px\", display: \"flex\", flexDirection: \"column\" }}>\n            <Typography align=\"left\" fullWidth gutterBottom variant=\"h4\">KYC Details</Typography>\n            <Typography align=\"left\" fullWidth gutterBottom variant=\"h6\">Please fill up the Merchant KYC Details below</Typography>\n            <TextField\n                margin=\"dense\"\n                label=\"Company Name\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={companyName}\n                disabled={!enabled2}\n                onChange={(e) => { setCompanyName(e.target.value) }}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Company PAN\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={companyPan}\n                disabled={!enabled2}\n                onChange={(e) => { setCompanyPan(e.target.value) }}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Your PAN\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={pan}\n                disabled={!enabled2}\n                onChange={(e) => { setPan(e.target.value) }}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Address\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={address}\n                disabled={!enabled2}\n                onChange={(e) => { setAddress(e.target.value) }}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"City\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={city}\n                disabled={!enabled2}\n                onChange={(e) => { setCity(e.target.value) }}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"District\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={district}\n                disabled={!enabled2}\n                onChange={(e) => { setDistrict(e.target.value) }}\n            /><FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                style={{ marginTop: \"5px\" }}\n                fullWidth>\n                <InputLabel>State</InputLabel>\n                <Select\n                    label=\"State\"\n                    disabled={!enabled2}\n                    value={state}\n                    onChange={(e) => { setState(e.target.value) }}\n                >\n                    {props.states ?\n                        props.states.map(state => state.stateCode ? <MenuItem value={state.stateId}>{state.state}</MenuItem> : null)\n                        :\n                        null}\n\n                </Select>\n            </FormControl>\n            <TextField\n                margin=\"dense\"\n                label=\"Pin Code\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={pinCode}\n                disabled={!enabled2}\n                onChange={(e) => { setPinCode(e.target.value) }}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Your Aadhaar Number\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={aadhaar}\n                disabled={!enabled2}\n                onChange={(e) => { setAadhaar(e.target.value) }}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Company GSTIN\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={gstin}\n                disabled={!enabled2}\n                onChange={(e) => { setGstin(e.target.value) }}\n            />\n            <TextField\n                margin=\"dense\"\n                label=\"Company TAN\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={tan}\n                disabled={!enabled2}\n                onChange={(e) => { setTan(e.target.value) }}\n            />\n            <Typography disabled={!enabled2} style={{ marginTop: \"10px\" }} variant=\"h6\">Government Identification Proof</Typography>\n            <FileBase64 multiple={false} onDone={(files) => {\n                console.dir(files);\n                if (/^image\\//.test(files.type))\n                    setEkycDoc(files.base64);\n            }} />\n            <Typography variant=\"body1\" color=\"error\">\n                {message}\n            </Typography>\n            {props.geodata ? <div>\n                <Typography align=\"left\" variant=\"subtitle1\">{props.geodata.latitude} {props.geodata.longitude}</Typography>\n            </div> : <Typography variant=\"body1\">Geolocation required.</Typography>}\n            <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n                <Button\n                    onClick={async () => {\n                        setEnabled2(false);\n                        let res = await getConnectInstance(false).registerCompany(companyName, companyPan, pan, address, city, district, state, pinCode, aadhaar, gstin, tan, props.geodata.latitude, props.geodata.longitude, ekycDoc);\n                        setMessage(res.message);\n                        if (res.status !== \"SUCCESS\") {\n                            setEnabled2(true);\n                        }\n                        else {\n                            getConnectInstance(null).logOut();\n                        }\n                    }}\n                    color=\"primary\">\n                    Register\n            </Button>\n                <Button\n                    onClick={(e) => { setMessage(\"\"); props.handleClose(); }}\n                >\n                    Close\n</Button>\n            </div>\n        </div>\n    </Dialog>\n}\n\nfunction UserCard(props) {\n    let theme = useTheme();\n    return <div style={{ padding: \"5px\", background: theme.palette.info.main }}>\n        <div style={{ display: \"flex\", alignItems: \"stretch\", justifyContent: \"space-evenly\" }}>\n\n            <Typography variant=\"body1\" style={{ fontWeight: \"bold\", color: theme.palette.info.contrastText, padding: \"0 15px \" }}>\n                {\"1\" + (\"m\" + props.id).padStart(6, \"0\")}\n            </Typography>\n            <Typography variant=\"body1\" style={{ flex: 1, fontWeight: \"bold\", background: theme.palette.primary.main, color: theme.palette.primary.contrastText, padding: \"0 5px\" }}>\n                {props.name}\n            </Typography>\n            {props.status === 1 ?\n                <Typography variant=\"body1\" style={{ flex: 1, background: theme.palette.secondary.main, color: theme.palette.secondary.contrastText, padding: \"0 5px\" }}>\n                    {props.type === 0 ? \"Super Administrator\" : props.type === 1 ? \"Administrator\" : props.type === 2 ? \"Super Distributor\" : props.type === 3 ? \"Distributor\" : props.type === 99 ? \"Retailer\" : \"Sub Distributor\"}\n                </Typography> :\n                <Typography variant=\"body1\" style={{ flex: 1, background: theme.palette.error.main, color: theme.palette.error.contrastText, padding: \"0 5px\" }}>\n                    Inactive\n            </Typography>\n            }\n            <div style={{ flex: 1, background: \"#fff\" }}>\n                <IconButton onClick={props.handleClick} color=\"primary\"><Edit /></IconButton>\n                {props.whitelabel ? <IconButton component=\"a\" target=\"_blank\" href={props.whitelabel.url} color=\"secondary\"><Public /></IconButton> : null}\n                <IconButton component=\"a\" target=\"_blank\" href={\"tel:\" + props.mobile} color=\"secondary\"><Phone /></IconButton>\n                <IconButton component=\"a\" href={\n                    window.AndroidRDService\n                        ?\n                        \"https://api.whatsapp.com/send?phone=91\" + props.mobile\n                        :\n                        \"https://web.whatsapp.com/send?phone=91\" + props.mobile\n                }\n                    target=\"whatsapp\" color=\"secondary\"><WhatsApp /></IconButton>\n                <IconButton component=\"a\" target=\"_blank\" href={\"mailto:\" + props.email} color=\"secondary\"><Mail /></IconButton>\n            </div>\n        </div>\n    </div>\n}\n\nlet slabLabels = [\"0 - 499\", \"500 - 999\", \"1000 - 1499\", \"1500 - 1999\", \"2000 - 2499\", \"2500 - 2999\", \"3000 - 6999\", \"7000 - 10000\"];\n\nfunction ChangeUser(props) {\n    let [email, setEmail] = React.useState(props.email);\n    let [whitelabel, setWhitelabel] = React.useState(props.whitelabel ? 1 : 0);\n    let [status, setStatus] = React.useState(props.status ? props.status : 0);\n    let [message, setMessage] = React.useState(\"\");\n    let perUCommission = props.perUCommission ? props.perUCommission.split(\";\") : [0, 0, 0, 0, 0, 0, 0, 0];\n    let fixUCommission = props.fixUCommission ? props.fixUCommission.split(\";\") : [0, 0, 0, 0, 0, 0, 0, 0];\n    let perCommission_t = props.per_commission ? props.per_commission.split(\";\") : null;\n    let [perCommission, setPerCommmission] = React.useState((perCommission_t && perCommission_t.length === 8) ? perCommission_t : [0, 0, 0, 0, 0, 0, 0, 0]);\n    let fixCommission_t = props.fix_commission ? props.fix_commission.split(\";\") : null;\n    let [fixCommission, setFixCommmission] = React.useState((fixCommission_t && fixCommission_t.length === 8) ? fixCommission_t : [0, 0, 0, 0, 0, 0, 0, 0]);\n    return (\n        <div>\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogContent>\n                    <DialogContentText>\n                        You may change the user's details below.\n                    </DialogContentText>\n                    <Typography variant=\"h5\">\n                        {props.name}\n                    </Typography>\n                    <Typography align=\"left\" variant=\"h6\" component=\"h3\">\n                        {props.type === 0 ? \"Super Administrator\" : props.type === 1 ? \"Administrator\" : props.type === 2 ? \"Super Distributor\" : props.type === 3 ? \"Distributor\" : props.type === 99 ? \"Retailer\" : \"Sub Distributor\"}\n                    </Typography>\n                    <Typography gutterBottom variant=\"body1\">\n                        {props.mobile}\n                    </Typography>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => { setEmail(e.target.value) }}\n                        fullWidth\n                    />\n                    <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                        Percentage Commission Slabs ( in % )\n                    </Typography>\n                    {[0, 1, 2, 3, 4, 5, 6, 7].map((i) => <TextField\n                        margin=\"dense\"\n                        label={slabLabels[i] + \" [Max: \" + perUCommission[i] + \"]\"}\n                        type=\"number\"\n                        value={perCommission[i]}\n                        onChange={(e) => {\n                            if ((e.target.value > 0 && e.target.value < 100) || e.target.value === '') {\n                                let perCommission_t = [...perCommission];\n                                perCommission_t[i] = e.target.value;\n                                setPerCommmission(perCommission_t);\n                            }\n                        }}\n                        error={perCommission[i] > perUCommission[i] && props.typeU > 0}\n                    />)}\n                    <Typography gutterBottom variant=\"h6\" component=\"h6\">\n                        Fixed Commission Slabs ( in Rs )\n                    </Typography>\n                    {[0, 1, 2, 3, 4, 5, 6, 7].map((i) => <TextField\n                        margin=\"dense\"\n                        label={slabLabels[i] + \" [Max: \" + fixUCommission[i] + \"]\"}\n                        type=\"number\"\n                        value={fixCommission[i]}\n                        onChange={(e) => {\n                            if (e.target.value > 0 || e.target.value === '') {\n                                let fixCommission_t = [...fixCommission];\n                                fixCommission_t[i] = e.target.value;\n                                setFixCommmission(fixCommission_t);\n                            }\n                        }}\n                        error={fixCommission[i] > fixUCommission[i] && props.typeU > 0}\n                    />)}\n                    <br />\n                    <FormControlLabel fullWidth control={<Switch checked={status} onChange={e => { setStatus(e.target.checked ? 1 : 0); }} />}\n                        label={status === 1 ? \"Active\" : \"Inactive\"} />\n                    {props.typeU === 0 ? (props.whitelabel && (props.whitelabel.uid === props.id) ?\n                        <Typography gutterBottom variant=\"body1\" color=\"info\">\n                            Whitelabel Assigned: {props.whitelabel.url}\n                        </Typography> : <div>\n                            <FormControlLabel control={<Switch checked={whitelabel} onChange={e => { setWhitelabel(e.target.checked ? { url: \"\" } : 0); }} />}\n                                label={\n                                    <TextField\n                                        margin=\"dense\"\n                                        label=\"Whitelabel Hostname\"\n                                        type=\"url\"\n                                        disabled={!whitelabel}\n                                        value={whitelabel.url}\n                                        onChange={(e) => { setWhitelabel({ url: e.target.value }) }}\n                                        fullWidth\n                                    />\n                                } />\n                        </div>) : null}\n                    <br />\n                </DialogContent>\n                <DialogActions>\n                    <Typography gutterBottom color=\"error\" component=\"p\" variant=\"body1\">\n                        {message}\n                    </Typography>\n                    <Button onClick={props.handleClose} color=\"primary\" onClick={async () => {\n                        let res = await getConnectInstance(false).updateUser(email, props.mobile, status, perCommission.join(\";\"), fixCommission.join(\";\"), props.whitelabel ? null : whitelabel);\n                        if (res.status === \"SUCCESS\") {\n                            setMessage(\"\");\n                            props.handleClose();\n                        }\n                        else setMessage(res.message);\n                    }}>\n                        Save\n            </Button>\n                    <Button onClick={() => { setMessage(\"\"); props.handleClose(); }}>\n                        Cancel\n            </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nfunction NewUser(props) {\n    let [name, setName] = React.useState(\"\");\n    let [email, setEmail] = React.useState(\"\");\n    let [mobile, setMobile] = React.useState(\"\");\n    let [message, setMessage] = React.useState(\"\");\n    let [allowAdd, setAllowAdd] = React.useState(false);\n    return (\n        <div>\n            <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">New {props.type === 0 ? \"Super Administrator\" : props.type === 1 ? \"Administrator\" : props.type === 2 ? \"Super Distributor\" : props.type === 3 ? \"Distributor\" : props.type === 99 ? \"Retailer\" : \"Sub Distributor\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please enter the details for new {props.type === 0 ? \"Super Administrator\" : props.type === 1 ? \"Administrator\" : props.type === 2 ? \"Super Distributor\" : props.type === 3 ? \"Distributor\" : props.type === 99 ? \"Retailer\" : \"Sub Distributor\"}\n                    </DialogContentText>\n                    <TextField\n\n                        margin=\"dense\"\n                        label=\"Name\"\n                        type=\"name\"\n                        fullWidth\n                        value={name}\n                        onChange={(e) => { setName(e.target.value) }}\n                    />\n                    <TextField\n\n                        margin=\"dense\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                        value={email}\n                        onChange={(e) => { setEmail(e.target.value) }}\n                    />\n                    <TextField\n\n                        margin=\"dense\"\n                        label=\"Mobile Number\"\n                        type=\"phone\"\n                        fullWidth\n                        value={mobile}\n                        onChange={(e) => { setMobile(e.target.value) }}\n                    />\n                    <FormControlLabel\n                        control={\n                            <Switch\n                                disabled={props.type === 99}\n                                checked={allowAdd}\n                                onChange={() => { setAllowAdd(!allowAdd) }}\n                                name=\"allowAdd\"\n                                color=\"secondary\"\n                            />\n                        }\n                        label=\"Management\"\n                    />\n                    <Typography component=\"pre\" variant=\"body1\" color=\"error\">\n                        {message}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={async () => {\n                            let res = await getConnectInstance(false).addUser(name, email, mobile, allowAdd, props.type === 99);\n                            if (res.status === \"SUCCESS\") {\n                                setName(\"\");\n                                setEmail(\"\");\n                                setMobile(\"\");\n                                setMessage(\"\");\n                                setAllowAdd(false);\n                            }\n                            setMessage(res.message);\n                        }}\n                        color=\"primary\">\n                        Add\n                        </Button>\n                    <Button onClick={() => {\n                        setName(\"\");\n                        setEmail(\"\");\n                        setMobile(\"\");\n                        setMessage(\"\");\n                        setAllowAdd(false);\n                        props.handleClose();\n                    }}>\n                        Cancel\n            </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport { Users, UserCard, NewUser, RegisterCompany };","import React from 'react';\nimport { Grid, Paper, Typography, TextField, FormControl, InputLabel, Select, Button, MenuItem, IconButton, Dialog, DialogContent, DialogActions, DialogTitle, Table, TableCell, TableContainer, TableHead, TableRow, TableBody, InputAdornment, withTheme } from '@material-ui/core';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\nimport { xmlDataToJSON } from 'xml-to-json-promise';\nimport { getConnectInstance } from '../connect';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Link } from 'react-router-dom';\nimport FileBase64 from 'react-file-base64';\nimport { Done, Cancel, OpenInBrowser, WhatsApp } from '@material-ui/icons';\n\nlet test = false;\n\nconst CUSTOMER_EXTENDED_FIELDS = false;\nclass RDService {\n    constructor() {\n        this.rdInfoCallback = null;\n        this.rdCaptureCallback = null;\n        this.capture_path = null;\n        this.info_path = null;\n        this.port = false;\n        this.busy = false;\n        this.test = test;\n    }\n\n    async startRDInfo(rdInfoCallback) {\n        if (!this.busy) {\n            this.busy = true;\n            this.rdInfoCallback = rdInfoCallback;\n            if (window.AndroidRDService && window.AndroidRDService.startRDInfo) {\n                window.AndroidRDService.startRDInfo();\n            }\n            else {\n                for (this.port = 11100; this.port <= 11120; this.port++) {\n                    try {\n                        let res = await fetch(\"http://127.0.0.1:\" + this.port, {\n                            method: 'RDSERVICE', // *GET, POST, PUT, DELETE, etc.\n                            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                            headers: {\n                                'Content-Type': 'text/xml; charset=utf-8'\n                            }\n                        });\n                        let data = await res.text();\n                        console.dir(data);\n\n                        let dataXML = await xmlDataToJSON(data, { normalizeTags: true, mergeAttrs: true, explicitArray: false });\n                        if (dataXML.rdservice.status === \"READY\") {\n                            this.info_path = null;\n                            for (let iface of dataXML.rdservice.interface) {\n                                if (iface.id === \"INFO\" || iface.id === \"DEVICEINFO\") {\n                                    this.info_path = iface.path;\n                                }\n                            }\n                            if (this.info_path) {\n                                let res2 = await fetch(\"http://127.0.0.1:\" + this.port + this.info_path, {\n                                    method: 'DEVICEINFO', // *GET, POST, PUT, DELETE, etc. \n                                    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                                    headers: {\n                                        'Content-Type': 'text/xml; charset=utf-8'\n                                    }\n                                });\n                                let data2 = await res2.text();\n                                console.dir(data2);\n                                this.finishRDInfo(data2);\n                                return;\n                            }\n                        }\n                    }\n                    catch (e) {\n                    }\n                }\n                this.port = false;\n\n                this.finishRDInfo(\"<error>Not found!</error>\");\n            }\n            if (this.test) {\n                let data = \"<DeviceInfo xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\" dpId=\\\"(DEVICE-PROVIDER_ID)\\\" rdsId=\\\"(RD Service ID)\\\" rdsVer=\\\"(RD Service Version)\\\" mdc=\\\"(DEVICE_CODE)\\\" mi=\\\"(MODEL_ID)\\\" mc=\\\"(DEVICE_CERTIFICATE_BASE64_VALUE)\\\" error=\\\"\\\"><additional_info key=\\\"\\\" value=\\\"\\\" /></DeviceInfo>\";\n                this.finishRDInfo(data);\n            }\n            //*/\n        }\n    }\n    async finishRDInfo(xml) {\n        let data = await xmlDataToJSON(xml, { normalizeTags: true, mergeAttrs: true, explicitArray: false })\n        console.dir(data);\n        this.busy = false;\n        if (this.rdInfoCallback != null) this.rdInfoCallback(data);\n    }\n    async startRDCapture(rdCaptureCallback) {\n        if (!this.busy) {\n            this.busy = true;\n            this.rdCaptureCallback = rdCaptureCallback;\n            if (window.AndroidRDService && window.AndroidRDService.startRDCapture) {\n                window.AndroidRDService.startRDCapture();\n            }\n            else if (this.port) {\n                try {\n                    let res = await fetch(\"http://127.0.0.1:\" + this.port, {\n                        method: 'RDSERVICE', // *GET, POST, PUT, DELETE, etc.\n                        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                        headers: {\n                            'Content-Type': 'text/xml; charset=utf-8'\n                        }\n                    });\n                    let data = await res.text();\n                    console.dir(data);\n\n                    let dataXML = await xmlDataToJSON(data, { normalizeTags: true, mergeAttrs: true, explicitArray: false });\n                    if (dataXML.rdservice.status === \"READY\") {\n                        this.capture_path = null;\n                        for (let iface of dataXML.rdservice.interface) {\n                            if (iface.id === \"CAPTURE\") {\n                                this.capture_path = iface.path;\n                            }\n                        }\n                        console.log(this.capture_path)\n                        if (this.capture_path) {\n                            let res = await fetch(\"http://127.0.0.1:\" + this.port + this.capture_path, {\n                                method: 'CAPTURE', // *GET, POST, PUT, DELETE, etc.\n                                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                                headers: {\n                                    'Content-Type': 'text/xml; charset=utf-8'\n                                },\n                                body: \"<PidOptions><Opts fCount=\\\"1\\\" fType=\\\"0\\\" iCount=\\\"0\\\" pCount=\\\"0\\\" format=\\\"0\\\" pidVer=\\\"2.0\\\" timeout=\\\"10000\\\" otp=\\\"\\\" posh=\\\"\\\" wadh=\\\"\\\"/> </PidOptions>\"\n\n                            });\n                            let data = await res.text();\n                            console.dir(data);\n                            this.finishRDCapture(data);\n                            return;\n                        }\n                    }\n                }\n                catch (e) {\n                }\n            }\n        }\n        if (this.test) {\n            let data = \"<PidData xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xmlns:xsd=\\\"http://www.w3.org/2001/XMLSchema\\\"><Resp fType=\\\"\\\" iCount=\\\"\\\" pCount=\\\"\\\" errCode=\\\"\\\" errInfo=\\\"\\\" fCount=\\\"\\\" ts=\\\"\\\" nmPoints=\\\"\\\" qScore=\\\"\\\" /><DeviceInfo dpId=\\\"(DEVICE-PROVIDER_ID)\\\" rdsId=\\\"(RD Service ID)\\\" rdsVer=\\\"(RD Service Version)\\\" mdc=\\\"(DEVICE_CODE)\\\" mi=\\\"(MODEL_ID)\\\" mc=\\\"(DEVICE_CERTIFICATE_BASE64_VALUE)\\\" error=\\\"\\\"><additional_info key=\\\"\\\" value=\\\"\\\" /></DeviceInfo><Skey ci=\\\"(CI_VALUE)\\\">(ENCRYPTED_SKEY_VALUE)</Skey><Hmac>(ENCRYPTED_HMAC_VALUE)</Hmac><Data type=\\\"X\\\">(ENCRYPTED_PID_BLOCK_VALUE)</Data></PidData>\";\n            this.finishRDCapture(data);\n        }\n\n    }\n    async finishRDCapture(xml) {\n        let data = await xmlDataToJSON(xml, { normalizeTags: true, mergeAttrs: true, explicitArray: false })\n        console.dir(data);\n        this.busy = false;\n        if (this.rdCaptureCallback != null) this.rdCaptureCallback(data);\n    }\n}\nvar rdServiceInstance;\nfunction getRDService() {\n    if (!rdServiceInstance) {\n        rdServiceInstance = new RDService();\n        window.RDService = rdServiceInstance;\n    }\n    return rdServiceInstance;\n}\n\nclass AEPS_t extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            adhaar: { value: \"\", satisfied: true },\n            name: { value: \"\", satisfied: true },\n            mobile: { value: \"\", satisfied: true },\n            email: { value: \"aeps_bills@minibank.in\", satisfied: true },\n            bank: { value: \"\", satisfied: true },\n            next: 0,\n            amount: { value: \"\", satisfied: true },\n            rdData: false,\n            changeEnabled: true,\n            changeEnabled2: true,\n            message: \"\"\n        };\n        this.rdService = getRDService();\n        this.slabLabels = [\"0 - 499\", \"500 - 999\", \"1000 - 1499\", \"1500 - 1999\", \"2000 - 2499\", \"2500 - 2999\", \"3000 - 6999\", \"7000 - 10000\"];\n        this.perCommission = props.profile.per_commission ? props.profile.per_commission.split(\";\") : null;\n        this.fixCommission = props.profile.fix_commission ? props.profile.fix_commission.split(\";\") : null;\n    }\n    render() {\n\n        return <div>\n            <div style={{ textAlign: \"left\", padding: \"15px\" }} elevation={1}>\n                <Typography variant=\"h4\" align=\"left\" color=\"primary\" gutterBottom>Aadhaar enabled Payment System</Typography>\n                <div style={{ height: \"15px\" }} />\n                <Typography align=\"left\" variant=\"h5\">Customer Details</Typography>\n                <TextField\n\n                    margin=\"dense\"\n                    label=\"Aadhaar Number\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={this.state.adhaar.value}\n                    error={!this.state.adhaar.satisfied}\n                    disabled={!this.state.changeEnabled}\n                    onChange={async (e) => {\n                        if (/^([1-9][0-9]{11})$/.test(e.target.value)) {\n                            this.setState({ adhaar: { value: e.target.value, satisfied: true }, changeEnabled: false });\n                            let customer = await getConnectInstance(false).getCustomer(e.target.value, null);\n                            if (customer) {\n                                this.setState({ adhaar: { value: customer.customer_aadhaar, satisfied: true }, name: { value: customer.customer_name, satisfied: true }, email: { value: customer.customer_email, satisfied: true }, mobile: { value: customer.customer_mobile, satisfied: true }, bank: { value: customer.bank_id, satisfied: true }, changeEnabled: true })\n                            }\n                            else this.setState({ changeEnabled: true });\n                        }\n                        else this.setState({ adhaar: { value: e.target.value, satisfied: false } })\n                    }}\n                />\n                <FormControl\n                    variant=\"outlined\"\n                    size=\"small\"\n                    style={{ marginTop: \"5px\" }}\n                    fullWidth>\n                    <InputLabel>Bank</InputLabel>\n                    <Select\n                        label=\"Bank\"\n                        disabled={!this.state.changeEnabled}\n                        value={this.state.bank.value}\n                        error={!this.state.bank.satisfied}\n                        onChange={(e) => { this.setState({ bank: { value: e.target.value, satisfied: true } }) }}\n                    >\n                        {this.props.bankDetails ?\n                            this.props.bankDetails.map(bank => <MenuItem value={bank.iinno}>{bank.bankName}</MenuItem>)\n                            :\n                            null}\n\n                    </Select>\n                </FormControl>\n                <TextField\n\n                    margin=\"dense\"\n                    label=\"Amount\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    fullWidth\n                    value={this.state.amount.value}\n                    error={!this.state.amount.satisfied}\n                    disabled={!this.state.changeEnabled}\n                    onChange={(e) => { this.setState({ amount: { value: e.target.value, satisfied: (/^([1-9][0-9]{1,})$/).test(e.target.value) && e.target.value <= 10000 } }) }}\n                />\n                <div style={{ height: \"15px\" }} />\n                <Grid container spacing={1}>\n                    <Grid item>\n                        <Button\n                            disabled={!(\n                                this.state.changeEnabled &&\n                                (this.state.adhaar.value && this.state.adhaar.satisfied) &&\n                                (CUSTOMER_EXTENDED_FIELDS ?\n                                    (this.state.email.value && this.state.email.satisfied) &&\n                                    (this.state.name.value && this.state.name.satisfied) &&\n                                    (this.state.mobile.value && this.state.mobile.satisfied)\n                                    : true) &&\n                                (this.state.bank.value && this.state.bank.satisfied) &&\n                                (this.state.amount.value && this.state.amount.satisfied) &&\n                                this.props.rdDetails && this.props.rdDetails.deviceinfo && this.props.geodata\n                            )}\n                            onClick={(e) => {\n                                this.setState({ rdData: false, changeEnabled: false, next: 1 });\n                                this.rdService.startRDCapture(async (data) => {\n                                    this.setState({ rdData: true });\n                                    let res = await getConnectInstance(false).makeWithdrawl(this.state.adhaar.value, this.state.email.value, this.state.name.value, this.state.mobile.value, this.state.bank.value, this.state.amount.value, data, this.props.geodata);\n                                    this.setState({ changeEnabled: true, message: res, next: 3 });\n                                });\n                            }} color=\"primary\">\n                            Make Withdrawl\n                    </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            disabled={!(\n                                this.state.changeEnabled &&\n                                (this.state.adhaar.value && this.state.adhaar.satisfied) &&\n                                (this.state.bank.value && this.state.bank.satisfied) &&\n                                this.props.rdDetails && this.props.rdDetails.deviceinfo && this.props.geodata\n                            )}\n                            onClick={(e) => {\n                                this.setState({ rdData: false, changeEnabled: false, next: 1 });\n                                this.rdService.startRDCapture(async (data) => {\n                                    this.setState({ rdData: true });\n                                    let res = await getConnectInstance(false).enquireBalance(this.state.adhaar.value, this.state.email.value, this.state.name.value, this.state.mobile.value, this.state.bank.value, data, this.props.geodata);\n                                    this.setState({ changeEnabled: true, message: res, next: 3 });\n                                });\n                            }} color=\"primary\">\n                            Enquire Balance\n                    </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            disabled={!(\n                                this.state.changeEnabled &&\n                                (this.state.adhaar.value && this.state.adhaar.satisfied) &&\n                                (this.state.bank.value && this.state.bank.satisfied) &&\n                                this.props.rdDetails && this.props.rdDetails.deviceinfo && this.props.geodata\n                            )}\n                            onClick={(e) => {\n                                this.setState({ rdData: false, changeEnabled: false, next: 1 });\n                                this.rdService.startRDCapture(async (data) => {\n                                    this.setState({ rdData: true });\n                                    let res = await getConnectInstance(false).miniStatement(this.state.adhaar.value, this.state.email.value, this.state.name.value, this.state.mobile.value, this.state.bank.value, data, this.props.geodata);\n                                    this.setState({ changeEnabled: true, message: res, next: 3 });\n                                });\n                            }} color=\"primary\">\n                            Mini Statement\n                    </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            disabled={!(\n                                this.state.changeEnabled && (\n                                    (/.+/.test(this.state.adhaar.value)) ||\n                                    (/.+/.test(this.state.email.value)) ||\n                                    (/.+/.test(this.state.name.value)) ||\n                                    (/.+/.test(this.state.mobile.value)) ||\n                                    (this.state.bank.value !== 0)\n                                )\n                            )}\n                            onClick={(e) => {\n                                this.setState({\n                                    adhaar: { value: \"\", satisfied: true },\n                                    name: { value: \"\", satisfied: true },\n                                    mobile: { value: \"\", satisfied: true },\n                                    email: { value: \"\", satisfied: true },\n                                    bank: { value: \"\", satisfied: true },\n                                    next: 0,\n                                    amount: { value: \"\", satisfied: true }\n                                });\n                            }}\n                        >\n                            Clear\n                    </Button>\n                    </Grid>\n                </Grid>\n            </div>\n            <Dialog open={this.state.message && this.state.next === 3}>\n                <DialogContent style={{ textAlign: \"left\", padding: \"15px\", background: this.state.message.status === \"SUCCESS\" ? this.props.theme.palette.success.main : this.props.theme.palette.error.main, color: this.state.message.status === \"SUCCESS\" ? this.props.theme.palette.success.contrastText : this.props.theme.palette.error.contrastText }} elevation={1}>\n                    <Typography variant=\"body1\" ><pre style={{ overflowX: 'auto' }}>{this.state.message.message}</pre></Typography>\n                </DialogContent>\n                <DialogActions>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Mobile Number\"\n                        variant=\"outlined\"\n                        type=\"phone\"\n                        value={this.state.mobile.value}\n                        error={!this.state.mobile.satisfied}\n                        disabled={!this.state.changeEnabled}\n                        onChange={async (e) => {\n                            if (/^([1-9][0-9]{9})$/.test(e.target.value)) {\n                                this.setState({ mobile: { value: e.target.value, satisfied: true } });\n                            }\n                            else this.setState({ mobile: { value: e.target.value, satisfied: false } })\n                        }}\n                    />\n                    <Button\n                        component=\"a\"\n                        enabled={this.state.mobile.satisfied && this.state.message}\n                        color=\"primary\"\n                        href={\n                            window.AndroidRDService\n                                ?\n                                \"https://api.whatsapp.com/send?phone=91\" + this.state.mobile.value + \"&text=\" + encodeURIComponent(this.state.message.message) + \"&source&data&app_absent\"\n                                :\n                                \"https://web.whatsapp.com/send?phone=91\" + this.state.mobile.value + \"&text=\" + encodeURIComponent(this.state.message.message) + \"&source&data&app_absent\"\n                        }\n                        target=\"whatsapp\"\n                    >\n                        <WhatsApp /> Send\n                    </Button>\n                    <Button\n                        onClick={(e) => { this.setState({ rdData: false, changeEnabled2: true, changeEnabled: true, next: 0 }); }}\n                    >\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={this.state.next === 1}>\n                <DialogContent style={{ padding: \"15px\" }} elevation={1}>\n\n                    <Grid container spacing={1}>\n                        <Grid item xs={3}>\n                            <FingerprintIcon />\n                        </Grid>\n                        <Grid item xs={9}>\n                            <Typography align=\"left\">{this.state.rdData ? \"BIOMETRIC CAPTURED\" : \"\"}</Typography>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n            </Dialog>\n        </div >;\n    }\n}\n\nconst AEPS = withTheme(AEPS_t)\n\nclass Transactions_t extends React.Component {\n    constructor(props) {\n        super(props);\n        let today = new Date(), tomorrow = new Date();\n        tomorrow.setDate(today.getDate() + 1);\n        this.state = {\n            from: today.toISOString().slice(0, 10),\n            to: tomorrow.toISOString().slice(0, 10),\n            transactions: [],\n            query: \"\"\n        }\n    }\n    componentDidMount() {\n        this.fetchTransactions();\n    }\n    async fetchTransactions() {\n        this.setState({ transactions: await getConnectInstance(false).fetchTransactions(this.state.from, this.state.to) });\n    }\n    render() {\n        return <div>\n            <div style={{ color: this.props.theme.palette.primary.main, padding: \"15px\" }}>\n                <Typography align=\"left\" gutterBottom variant=\"h4\">Transactions</Typography>\n                <Grid justify=\"flex-start\" spacing={2} container>\n                    <Grid item>\n                        <TextField\n                            label=\"From\"\n                            type=\"date\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            defaultValue={this.state.from}\n                            onChange={async (e) => { await this.setState({ from: e.target.value }); await this.fetchTransactions(); }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            label=\"To\"\n                            type=\"date\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            defaultValue={this.state.to}\n                            onChange={async (e) => { await this.setState({ to: e.target.value }); await this.fetchTransactions(); }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n\n                    </Grid>\n                    <Grid item>\n                        <TextField fullWidth\n                            id=\"input-with-icon-textfield\"\n                            label=\"Search transactions\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            value={this.state.query}\n                            onChange={e => this.setState({ query: e.target.value })}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n\n                    </Grid>\n                </Grid>\n            </div>\n            <div>\n                <TableContainer>\n                    <Table >\n                        <TableHead style={{ background: this.props.theme.palette.info.main, color: this.props.theme.palette.info.contrastText }}>\n                            <TableRow>\n                                <TableCell>TxnID</TableCell>\n                                <TableCell>Type</TableCell>\n                                <TableCell>Retailer UID</TableCell>\n                                <TableCell>Transaction Number</TableCell>\n                                <TableCell>Amount</TableCell>\n                                <TableCell>Transaction Amount</TableCell>\n                                <TableCell>Balance Amount</TableCell>\n                                <TableCell>Message</TableCell>\n                                <TableCell>Timestamp</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{ background: this.props.theme.palette.info.light, color: this.props.theme.palette.info.contrastText }}>\n                            {this.state.transactions && this.state.transactions.length > 0 ? this.state.transactions.map((row) =>\n                                (!this.state.query || (row.id + '').indexOf(this.state.query) >= 0 ||\n                                    (row.type + '').indexOf(this.state.query) >= 0 ||\n                                    (row.timestamp + '').indexOf(this.state.query) >= 0 ||\n                                    (row.user_id + '').indexOf(this.state.query) >= 0) ?\n                                    (\n                                        <TableRow key={row.id}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.id}\n                                            </TableCell>\n                                            <TableCell>\n                                                {row.type}\n                                            </TableCell>\n                                            <TableCell>\n                                                {row.user_id}\n                                            </TableCell>\n                                            <TableCell>{row.fingpayTransactionId}</TableCell>\n                                            <TableCell align=\"right\">{row.amount}</TableCell>\n                                            <TableCell align=\"right\">{row.transactionAmount}</TableCell>\n                                            <TableCell align=\"right\">{row.balanceAmount}</TableCell>\n                                            <TableCell>{row.message}</TableCell>\n                                            <TableCell>{row.timestamp}</TableCell>\n                                        </TableRow>\n                                    ) : null) : <TableRow>\n                                    <TableCell colSpan={9}>No Transactions Found</TableCell>\n\n                                </TableRow>}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        </div>\n    }\n}\n\nconst Transactions = withTheme(Transactions_t);\n\nclass Balance_t extends React.Component {\n    constructor(props) {\n        super(props);\n        let today = new Date(), tomorrow = new Date();\n        tomorrow.setDate(today.getDate() + 1);\n        this.state = {\n            from: today.toISOString().slice(0, 10),\n            to: tomorrow.toISOString().slice(0, 10),\n            commissions: [],\n            balance: null,\n            query: \"\",\n            addBalance: false,\n            uploadReceipt: false,\n            addBalanceAmount: \"\",\n            message: \"\"\n        }\n    }\n    componentDidMount() {\n        this.fetchCommissions();\n    }\n    async fetchCommissions() {\n        let res = await getConnectInstance(false).fetchCommissions(this.state.from, this.state.to);\n        this.setState({ commissions: res.commissions, balance: res.balance });\n    }\n    render() {\n        return <div>\n            <div style={{ color: this.props.theme.palette.primary.main, padding: \"15px\" }}>\n                <Typography align=\"left\" gutterBottom variant=\"h4\">Wallet</Typography>\n                {this.state.balance !== null ? <div style={{ textAlign: \"left\", paddingBottom: \"15px\" }}>\n                    <Typography align=\"left\" component=\"span\" variant=\"h5\">Balance: </Typography>\n                    <Typography align=\"left\" component=\"span\" color=\"primary\" variant=\"h5\"> {this.state.balance} </Typography>\n                    <div>\n                        <Button color=\"primary\" onClick={() => this.setState({ addBalance: true })} style={{ margin: \"10px\" }} variant=\"outlined\">Add</Button>\n                        <Button color=\"secondary\" component={Link} to=\"/transfer\" style={{ margin: \"10px\" }} variant=\"outlined\">Withdraw</Button>\n                    </div>\n                </div> : null}\n                <Grid justify=\"flex-start\" spacing={2} container>\n                    <Grid item>\n                        <TextField\n                            label=\"From\"\n                            type=\"date\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            defaultValue={this.state.from}\n                            onChange={async (e) => { await this.setState({ from: e.target.value }); await this.fetchCommissions(); }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n\n                    </Grid>\n                    <Grid item>\n                        <TextField\n                            label=\"To\"\n                            type=\"date\"\n                            size=\"small\"\n                            variant=\"outlined\"\n                            defaultValue={this.state.to}\n                            onChange={async (e) => { await this.setState({ to: e.target.value }); await this.fetchCommissions(); }}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n\n                    </Grid>\n                    <Grid item>\n                        <TextField fullWidth\n                            id=\"input-with-icon-textfield\"\n                            label=\"Search commissions\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                            value={this.state.query}\n                            onChange={e => this.setState({ query: e.target.value })}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n\n                    </Grid>\n                </Grid>\n            </div>\n            <Dialog open={this.state.addBalance} onClose={() => this.setState({ message: \"\", addBalance: false, uploadReceipt: null, addBalanceAmount: null })}>\n                <Paper style={{ padding: \"15px\" }}>\n                    <Typography style={{ marginTop: \"10px\" }} variant=\"h6\">Add Balance</Typography>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Amount\"\n                        type=\"number\"\n                        variant=\"outlined\"\n                        fullWidth\n                        gutterBottom\n                        style={{ color: this.props.theme.palette.info.contrastText }}\n                        value={this.state.addBalanceAmount}\n                        onChange={(e) => {\n                            this.setState({ addBalanceAmount: e.target.value });\n                        }}\n                    />\n                    <Typography style={{ marginTop: \"10px\" }} variant=\"caption\">Deposit Receipt/Transfer Receipt</Typography><br />\n                    <FileBase64 multiple={false} onDone={(files) => {\n                        if (/^image\\//.test(files.type))\n                            this.setState({ uploadReceipt: files.base64 });\n                    }} />\n                    <Typography color=\"error\">{this.state.message}</Typography>\n                    <div style={{ display: \"flex\", margin: \"5px\", justifyContent: \"flex-start\" }}>\n                        <Button color=\"primary\" onClick={async () => { let res = await getConnectInstance(null).addBalance(this.state.addBalanceAmount, this.state.uploadReceipt); this.setState({ message: res.message }); this.fetchCommissions(); }} >Request</Button><Button onClick={() => this.setState({ message: \"\", addBalance: false, uploadReceipt: null, addBalanceAmount: null })}>Close</Button></div>\n                </Paper>\n            </Dialog>\n            <div>\n                <TableContainer>\n                    <Table >\n                        <TableHead style={{ background: this.props.theme.palette.info.main, color: this.props.theme.palette.info.contrastText }}>\n                            <TableRow>\n                                <TableCell>TxnID</TableCell>\n                                <TableCell>Particulars</TableCell>\n                                <TableCell>Amount</TableCell>\n                                <TableCell>Type</TableCell>\n                                <TableCell>Timestamp</TableCell>\n                                <TableCell>Status</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{ background: this.props.theme.palette.info.light, color: this.props.theme.palette.info.contrastText }}>\n                            {this.state.commissions && this.state.commissions.length > 0 ? this.state.commissions.map((row) =>\n                                (!this.state.query || (row.id + '').indexOf(this.state.query) >= 0 ||\n                                    (row.tid + '').indexOf(this.state.query) >= 0 ||\n                                    (row.commission + '').indexOf(this.state.query) >= 0 ||\n                                    (row.value + '').indexOf(this.state.query) >= 0 ||\n                                    (row.timestamp + '').indexOf(this.state.query) >= 0) ?\n                                    (\n                                        <TableRow key={row.id}>\n                                            <TableCell>\n                                                Txn{row.tid}_{row.id}\n                                            </TableCell>\n                                            <TableCell>\n                                                {row.commission}\n                                            </TableCell>\n                                            <TableCell align=\"right\" style={{ background: this.props.theme.palette.info.main }}>{row.value}</TableCell>\n                                            <TableCell>{row.type}</TableCell>\n                                            <TableCell>{row.timestamp}</TableCell>\n                                            <TableCell style={row.accepted === 1 ? { background: this.props.theme.palette.success.main, color: this.props.theme.palette.success.contrastText } : { background: this.props.theme.palette.error.main, color: this.props.theme.palette.error.contrastText }}>{row.accepted === 1 ? \"ACCEPTED\" : row.accepted === 2 ? \"REJECTED\" : \"PENDING\"}</TableCell>\n                                        </TableRow>\n                                    ) : null) : <TableRow>\n                                    <TableCell colSpan={6}>No Transactions Found</TableCell>\n                                </TableRow>\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer >\n            </div >\n        </div >\n    }\n}\n\nconst Balance = withTheme(Balance_t)\n\n\nclass AddBalance_t extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            commissions: [],\n            message: \"\",\n            viewDoc: null\n        }\n    }\n    componentDidMount() {\n        this.fetchCommissions();\n    }\n    async fetchCommissions() {\n        let res = await getConnectInstance(false).fetchAddRequests();\n        this.setState({ commissions: res.commissions });\n    }\n    render() {\n        return <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"stretch\" }}>\n            <div style={{ color: this.props.theme.palette.primary.main, padding: \"15px\" }}>\n                <Typography align=\"left\" gutterBottom variant=\"h4\">Approve Add Balance</Typography>\n            </div>\n            {this.state.viewDoc ?\n                <div style={{}}>\n                    <div style={{ padding: \"10px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                        <Typography variant=\"h6\">Uploaded Receipt</Typography>\n                        <div>\n                            <Button color=\"primary\">Print</Button>\n                            <Button color=\"secondary\" onClick={() => this.setState({ viewDoc: null })}>Close</Button>\n                        </div>\n                    </div>\n                    <iframe style={{ height: '480px', width: '100%' }} src={this.state.viewDoc}>Holla! Please contact administrator...</iframe>\n                </div> :\n                <div>\n                    <TableContainer>\n                        <Table >\n                            <TableHead style={{ background: this.props.theme.palette.info.main, color: this.props.theme.palette.info.contrastText }}>\n                                <TableRow>\n                                    <TableCell>TxnID</TableCell>\n                                    <TableCell>User ID</TableCell>\n                                    <TableCell>Amount</TableCell>\n                                    <TableCell>Timestamp</TableCell>\n                                    <TableCell>Action</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody style={{ background: this.props.theme.palette.info.light, color: this.props.theme.palette.info.contrastText }}>\n                                {this.state.commissions && this.state.commissions.length > 0 ? this.state.commissions.map((row) =>\n                                    <TableRow key={row.id}>\n                                        <TableCell>\n                                            Txn{row.tid}_{row.id}\n                                        </TableCell>\n                                        <TableCell>\n                                            {row.uid}\n                                        </TableCell>\n                                        <TableCell align=\"right\" style={{ background: this.props.theme.palette.info.main }}>{row.value}</TableCell>\n                                        <TableCell>{row.timestamp}</TableCell>\n                                        <TableCell style={{ background: \"#fff\" }} align=\"center\">\n                                            <IconButton color=\"secondary\" onClick={() => {\n                                                this.setState({ viewDoc: row.data });\n                                            }}><OpenInBrowser /></IconButton>\n                                            <IconButton onClick={async () => {\n                                                let res = await getConnectInstance(null).approveBalance(row.id, 1)\n                                                this.setState({ message: res.message });\n                                                this.fetchCommissions();\n                                            }} color=\"primary\"><Done /></IconButton>\n                                            <IconButton onClick={async () => {\n                                                let res = await getConnectInstance(null).approveBalance(row.id, 2)\n                                                this.setState({ message: res.message });\n                                                this.fetchCommissions();\n                                            }} color=\"primary\"><Cancel /></IconButton>\n                                        </TableCell>\n                                    </TableRow>)\n                                    :\n                                    <TableRow>\n                                        <TableCell colSpan={5}>No Transactions Found</TableCell>\n                                    </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </TableContainer >\n                </div >}\n        </div >\n    }\n}\n\nconst AddBalance = withTheme(AddBalance_t);\n\nclass DMT_t extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            transferType: false,\n            accountNumber: \"\",\n            ifsCode: \"\",\n            amount: 0,\n            name: \"\",\n            viewDoc: false,\n            limit: 0,\n            charge: 0,\n            message: \"\",\n            phone: \"\"\n        };\n    }\n    componentDidMount() {\n        this.fetchCommissions();\n    }\n    async fetchCommissions() {\n        let res = await getConnectInstance(false).fetchTransfers();\n        this.setState({ commissions: res.commissions, limit: parseInt(res.limit), charge: parseInt(res.charge) });\n    }\n    render() {\n        return <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"stretch\", padding: \"15px\" }}>\n                <Typography align=\"left\" color=\"primary\" gutterBottom variant=\"h4\">Money Transfer</Typography>\n\n                <TextField\n                    margin=\"dense\"\n                    label=\"Customer Name\"\n                    type=\"text\"\n                    variant=\"outlined\"\n                    style={{ margin: \"5px\" }}\n                    fullWidth\n                    gutterBottom\n                    value={this.state.name}\n                    onChange={(e) => {\n                        this.setState({ name: e.target.value });\n                    }}\n                />\n                <div style={{ display: \"flex\" }}>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Amount\"\n                        type=\"number\"\n                        variant=\"outlined\"\n                        gutterBottom\n                        style={{ flex: 1, margin: \"5px\" }}\n                        value={this.state.amount}\n                        onChange={(e) => {\n                            this.setState({ amount: parseInt(e.target.value) });\n                        }}\n                    />\n                    <Typography align=\"left\" style={{ flex: 1, margin: \"5px\" }} component=\"p\" variant=\"body1\">\n                        Transfer Charge: {this.state.amount && this.state.amount > 0 && this.state.limit && this.state.charge ? (Math.ceil(this.state.amount / this.state.limit) * this.state.charge) : 0}\n                    </Typography>\n                </div>\n                <div style={{ display: \"flex\" }}>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Account Number\"\n                        type=\"number\"\n                        variant=\"outlined\"\n                        gutterBottom\n                        style={{ flex: 1, margin: \"5px\" }}\n                        value={this.state.accountNumber}\n                        onChange={(e) => {\n                            this.setState({ accountNumber: e.target.value });\n                        }}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"IFSC Code\"\n                        type=\"text\"\n                        variant=\"outlined\"\n                        gutterBottom\n                        style={{ flex: 1, margin: \"5px\" }}\n                        value={this.state.ifsCode}\n                        onChange={(e) => {\n                            this.setState({ ifsCode: e.target.value });\n                        }}\n                    />\n                </div>\n\n                <div style={{ display: \"flex\" }}>\n                    <Button color=\"primary\" onClick={async () => {\n                        let result = await getConnectInstance(null).makePayment(this.state.name, this.state.amount, this.state.accountNumber, this.state.ifsCode);\n                        if (result.status === 'SUCCESS') {\n                            this.setState({ viewDoc: result.message });\n                        }\n                        else {\n                            this.setState({ message: result.message });\n                        }\n                        this.fetchCommissions();\n                    }}>Transfer</Button>\n                    <Button color=\"secondary\" onClick={() => this.setState({ name: '', amount: 0, accountNumber: '', ifsCode: '' })}>Clear</Button>\n                    <Typography align=\"left\" style={{ flex: 1, margin: \"5px\" }} color=\"error\" component=\"p\" variant=\"body1\">\n                        {this.state.message}\n                    </Typography>\n\n                </div>\n            </div>\n            <Dialog open={this.state.viewDoc}>\n                <DialogContent>\n                    <iframe style={{ height: '480px', width: '100%' }} src={this.state.viewDoc}>Holla! Please contact administrator...</iframe>\n                </DialogContent>\n                <DialogActions>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Customer Mobile\"\n                        type=\"phone\"\n                        variant=\"outlined\"\n                        gutterBottom\n                        style={{ flex: 1, margin: \"5px\" }}\n                        color=\"primary\"\n                        value={this.state.phone}\n                        onChange={(e) => {\n                            this.setState({ phone: e.target.value });\n                        }}\n                    />\n                    <Button\n                        component=\"a\"\n                        enabled={/[1-9][0-9]{9}/.test(this.state.phone)}\n                        href={\n                            this.state.viewDoc ?\n                                window.AndroidRDService\n                                    ?\n                                    \"https://api.whatsapp.com/send?phone=91\" + this.state.phone + \"&text=\" + encodeURIComponent(this.state.viewDoc.substring(15)) + \"&source&data&app_absent\"\n                                    :\n                                    \"https://web.whatsapp.com/send?phone=91\" + this.state.phone + \"&text=\" + encodeURIComponent(this.state.viewDoc.substring(15)) + \"&source&data&app_absent\"\n                                :\n                                null\n                        }\n                        target=\"whatsapp\"\n                    >\n                        <WhatsApp /> Send\n                    </Button>\n                    <Button color=\"secondary\" onClick={() => this.setState({ viewDoc: null })}>Close</Button>\n                </DialogActions>\n            </Dialog>\n            <div>\n                <TableContainer>\n                    <Table >\n                        <TableHead style={{ background: this.props.theme.palette.info.main, color: this.props.theme.palette.info.contrastText }}>\n                            <TableRow>\n                                <TableCell>TxnID</TableCell>\n                                <TableCell>User ID</TableCell>\n                                <TableCell>Amount</TableCell>\n                                <TableCell>Timestamp</TableCell>\n                                <TableCell>Status</TableCell>\n                                <TableCell>Action</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{ background: this.props.theme.palette.info.light, color: this.props.theme.palette.info.contrastText }}>\n                            {this.state.commissions && this.state.commissions.length > 0 ? this.state.commissions.map((row) =>\n                                <TableRow key={row.id}>\n                                    <TableCell>\n                                        Txn{row.tid}_{row.id}\n                                    </TableCell>\n                                    <TableCell>\n                                        {row.uid}\n                                    </TableCell>\n                                    <TableCell align=\"right\" style={{ background: this.props.theme.palette.info.main }}>{row.value}</TableCell>\n                                    <TableCell>{row.timestamp}</TableCell><TableCell style={row.accepted === 1 ? { background: this.props.theme.palette.success.main, color: this.props.theme.palette.success.contrastText } : { background: this.props.theme.palette.error.main, color: this.props.theme.palette.error.contrastText }}>{row.accepted === 1 ? \"ACCEPTED\" : row.accepted === 2 ? \"REJECTED\" : \"PENDING\"}</TableCell>\n\n                                    <TableCell style={{ background: \"#fff\" }} align=\"center\">\n                                        {row.data ? <IconButton color=\"secondary\" onClick={() => {\n                                            this.setState({ viewDoc: row.data });\n                                        }}><OpenInBrowser /></IconButton> : null}\n                                    </TableCell>\n                                </TableRow>)\n                                :\n                                <TableRow>\n                                    <TableCell colSpan={5}>No Transactions Found</TableCell>\n                                </TableRow>\n                            }\n                        </TableBody>\n                    </Table>\n                </TableContainer >\n            </div >\n\n        </div >\n    }\n}\n\nconst DMT = withTheme(DMT_t)\n\nexport { AEPS, getRDService, DMT, Transactions, Balance, AddBalance };","import React from 'react';\nimport { Grid, Typography, Paper, Card, CardContent, TextField, Button, Avatar, CardActions, CardHeader, FormControl, InputLabel, Select, MenuItem, useTheme, Divider, Dialog } from '@material-ui/core';\nimport { getConnectInstance } from '../connect';\nimport { RegisterCompany } from \"./management\"\nimport crypto from 'crypto';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport FileBase64 from 'react-file-base64';\nimport InputColor from 'react-input-color';\n\nfunction Profile(props) {\n    let [repassword, setRepassword] = React.useState(\"\");\n    let [newpassword, setNewpassword] = React.useState(\"\");\n    let [message, setMessage] = React.useState(\"\");\n    let [enabled, setEnabled] = React.useState(true);\n    let [registerCompany, setRegisterCompany] = React.useState(false);\n    let [changePasswordShow, setChangePasswordShow] = React.useState(false);\n    let [whiteLabelName, setWhiteLabelName] = React.useState(props.whitelabel ? props.whitelabel.name : props.merchant ? props.merchant.name : \"\");\n    let [whiteLabelInstructions, setWhiteLabelInstructions] = React.useState(props.whitelabel ? props.whitelabel.instructions : \"\");\n    let theme = useTheme();\n    let colors = props.whitelabel && props.whitelabel.color ? props.whitelabel.color.split(\",\") : null;\n    let [color, setColorA] = React.useState(colors && colors.length === 6 ? colors : [theme.palette.primary.main, theme.palette.secondary.main, theme.palette.error.main, theme.palette.warning.main, theme.palette.info.main, theme.palette.success.main]);\n    let setColor = (colors) => {\n        if (props.setColor) props.setColor(colors);\n        setColorA(colors);\n    }\n    let [whiteLabelImage, setWhiteLabelImage] = React.useState(props.whitelabel ? props.whitelabel.logo : null);\n    let [enabled2, setEnabled2] = React.useState(true);\n    let slabLabels = [\"0 - 499\", \"500 - 999\", \"1000 - 1499\", \"1500 - 1999\", \"2000 - 2499\", \"2500 - 2999\", \"3000 - 6999\", \"7000 - 10000\"];\n    let perCommission = props.per_commission ? props.per_commission.split(\";\") : null;\n    let fixCommission = props.fix_commission ? props.fix_commission.split(\";\") : null;\n    return <div>\n        <Grid alignItems=\"stretch\" container>\n            <Grid item lg={props.whitelabel ? 8 : 12} xs={12} style={{ display: \"flex\", justifyContent: \"space-between\", flexDirection: \"column\" }}>\n\n                <Typography gutterBottom style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", textAlign: \"left\", margin: \"10px\", color: theme.palette.secondary.main }} variant=\"h3\">\n                    {props.name}\n                    <div>\n                        <Button disabled={changePasswordShow} onClick={() => { setChangePasswordShow(true); }} variant=\"outlined\" color=\"secondary\">Change Password</Button>\n                        <span> </span>\n                        {!props.merchant_id ?\n                            <Button onClick={() => { setRegisterCompany(true); }}\n                                color=\"primary\" variant=\"outlined\" aria-label=\"add\">\n                                KYC for AePS\n                            </Button> : null}\n                    </div>\n\n                </Typography>\n                <div>\n                    <Typography gutterBottom style={{ color: theme.palette.info.main }} variant=\"h4\">\n                        {(props.type === 0 ? \"Super Administrator\" : props.type === 1 ? \"Administrator\" : props.type === 2 ? \"Super Distributor\" : props.type === 3 ? \"Distributor\" : props.type === 99 ? \"Retailer\" : \"Sub Distributor\").toUpperCase()}\n                    </Typography>\n                    <Typography style={{ color: theme.palette.info.main }} variant=\"body1\">\n                        Unique ID: {\"1\" + (\"m\" + props.id).padStart(6, \"0\")}\n                    </Typography>\n                    <Typography style={{ color: theme.palette.info.main }} variant=\"body1\">\n                        {props.email}\n                    </Typography>\n                    <Typography style={{ color: theme.palette.info.main, marginBottom: \"15px\" }} variant=\"body1\">\n                        {props.mobile}\n                    </Typography>\n                </div>\n                <div style={{ background: theme.palette.info.main, color: theme.palette.info.contrastText, padding: \"5px\" }}>\n                    <Typography gutterBottom style={{ textAlign: \"left\", margin: \"15px\" }} variant=\"h4\">AePS Commissions</Typography>\n                    <div style={{ margin: \"15px\", display: \"flex\", justifyContent: \"space-evenly\", flexWrap: \"wrap\" }}>\n                        {[0, 1, 2, 3, 4, 5, 6, 7].map(i =>\n                            <div style={{ background: theme.palette.info.light, margin: \"5px\", padding: \"10px\" }}>\n                                <Typography variant=\"caption\">\n                                    {slabLabels[i]}\n                                </Typography>\n                                {perCommission ?\n                                    <Typography variant=\"body1\">\n                                        {perCommission[i] ? perCommission[i] : \"0\"} %\n                                    </Typography> : null}\n                                {fixCommission ?\n                                    <Typography variant=\"body1\">\n                                        Rs. {fixCommission[i] ? fixCommission[i] : \"0\"}\n                                    </Typography> : null}\n                            </div>)}\n                    </div>\n                </div>\n                <RegisterCompany states={props.states} geodata={props.geodata} open={registerCompany} handleClose={() => setRegisterCompany(false)} />\n                <Dialog open={changePasswordShow}>\n                    <div style={{ padding: \"15px\" }} elevation={1}>\n                        <Typography gutterBottom variant=\"h5\">Change Password</Typography>\n                        <TextField\n                            margin=\"dense\"\n                            label=\"New Password\"\n                            type=\"password\"\n                            variant=\"outlined\"\n                            fullWidth\n                            value={newpassword}\n                            disabled={!enabled}\n                            onChange={(e) => { setNewpassword(e.target.value) }}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Confirm Password\"\n                            type=\"password\"\n                            variant=\"outlined\"\n                            fullWidth\n                            value={repassword}\n                            disabled={!enabled}\n                            onChange={(e) => { setRepassword(e.target.value) }}\n                        />\n                        <Typography variant=\"body1\" color=\"error\">\n                            {message}\n                        </Typography>\n\n                        <Grid container spacing={1}>\n                            <Grid item>\n                                <Button\n                                    disabled={!(\n                                        newpassword.length >= 6 &&\n                                        repassword === newpassword\n                                    ) || !enabled}\n                                    onClick={async (e) => {\n                                        if (newpassword.length >= 6 &&\n                                            repassword === newpassword) {\n                                            let password = crypto.createHash('sha1').update(newpassword).digest('base64');\n                                            setEnabled(false);\n                                            setNewpassword(password);\n                                            let res = await getConnectInstance(false).changePassword(password);\n                                            setMessage(res.message);\n                                            if (res.status === \"SUCCESS\") {\n                                                setRepassword(\"\");\n                                            }\n                                            setNewpassword(\"\");\n                                            setEnabled(true);\n                                        }\n                                        else {\n                                            setMessage(\"Both the passwords must be identical and atleast 6 characters long.\")\n                                        }\n                                    }} color=\"primary\">\n                                    Save\n                </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={(e) => { setMessage(\"\"); setNewpassword(\"\"); setRepassword(\"\"); setChangePasswordShow(false); }}\n                                >\n                                    Close\n                    </Button>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Dialog>\n            </Grid>\n            {props.whitelabel && (props.whitelabel.uid === props.id) ?\n                <Grid item xs={12} lg={4}>\n                    <div style={{ background: \"#fed\", padding: \"15px\" }} >\n                        <Typography gutterBottom variant=\"h4\">Whitelabel Settings</Typography>\n                        <TextField\n                            margin=\"dense\"\n                            label=\"Whitelabel Title\"\n                            type=\"text\"\n                            variant=\"outlined\"\n                            fullWidth\n                            style={{ color: theme.palette.info.contrastText }}\n                            value={whiteLabelName}\n                            disabled={!enabled2}\n                            onChange={(e) => { setWhiteLabelName(e.target.value) }}\n                        />\n                        <Typography style={{ marginTop: \"10px\" }} variant=\"h5\">Instructions</Typography>\n                        <CKEditor\n                            editor={ClassicEditor}\n                            data={whiteLabelInstructions}\n                            disabled={!enabled2}\n                            fullWidth\n                            style={{ width: '100%', height: \"360px\" }}\n                            onChange={(event, editor) => {\n                                setWhiteLabelInstructions(editor.getData());\n                            }}\n                        />\n                        <Typography style={{ marginTop: \"10px\" }} variant=\"h5\">Colors</Typography>\n                        <div style={{ background: color[0], display: \"flex\" }}>\n                            <InputColor\n                                initialValue={color[0]}\n                                onChange={(c) => { let color2 = [...color]; color2[0] = c.hex; setColor(color2); }}\n                            />\n                            <Typography style={{ flex: 1, textAlign: 'center' }} variant=\"body1\">Primary</Typography><br />\n                        </div>\n                        <div style={{ background: color[1], display: \"flex\" }}>\n                            <InputColor\n                                initialValue={color[1]}\n                                onChange={(c) => { let color2 = [...color]; color2[1] = c.hex; setColor(color2); }}\n                            />\n                            <Typography style={{ flex: 1, textAlign: 'center' }} variant=\"body1\">Secondary</Typography><br />\n                        </div>\n                        <div style={{ background: color[2], display: \"flex\" }}>\n                            <InputColor\n                                initialValue={color[2]}\n                                onChange={(c) => { let color2 = [...color]; color2[2] = c.hex; setColor(color2); }}\n                            />\n                            <Typography style={{ flex: 1, textAlign: 'center' }} variant=\"body1\">Error</Typography><br />\n                        </div>\n                        <div style={{ background: color[3], display: \"flex\" }}>\n                            <InputColor\n                                initialValue={color[3]}\n                                onChange={(c) => { let color2 = [...color]; color2[3] = c.hex; setColor(color2); }}\n                            />\n                            <Typography style={{ flex: 1, textAlign: 'center' }} variant=\"body1\">Warning</Typography><br />\n                        </div>\n                        <div style={{ background: color[4], display: \"flex\" }}>\n                            <InputColor\n                                initialValue={color[4]}\n                                onChange={(c) => { let color2 = [...color]; color2[4] = c.hex; setColor(color2); }}\n                            />\n                            <Typography style={{ flex: 1, textAlign: 'center' }} variant=\"body1\">Info</Typography><br />\n                        </div>\n                        <div style={{ background: color[5], display: \"flex\" }}>\n                            <InputColor\n                                initialValue={color[5]}\n                                onChange={(c) => { let color2 = [...color]; color2[5] = c.hex; setColor(color2); }}\n                            />\n                            <Typography style={{ flex: 1, textAlign: 'center' }} variant=\"body1\">Success</Typography><br />\n                        </div>\n                        <Typography disabled={!enabled2} style={{ marginTop: \"10px\" }} variant=\"h6\">Logo</Typography>\n                        <FileBase64 multiple={false} onDone={(files) => {\n                            console.dir(files);\n                            if (/^image\\//.test(files.type))\n                                setWhiteLabelImage(files.base64);\n                        }} />\n                        <p align=\"center\">{whiteLabelImage ? <img src={whiteLabelImage} style={{ maxWidth: \"360px\", maxHeight: \"100px\" }} /> : null}</p>\n                        <Typography variant=\"body1\" color=\"error\">\n                            {message}\n                        </Typography>\n                        <Grid container spacing={1}>\n                            <Grid item>\n                                {enabled2 ?\n                                    <Button\n                                        onClick={async () => {\n                                            setEnabled2(false);\n                                            let res = await getConnectInstance(false).saveWhiteLabel(whiteLabelName, whiteLabelImage, whiteLabelInstructions, color.join(\",\"));\n                                            setMessage(res.message);\n                                            if (res.status !== \"SUCCESS\") {\n                                                setEnabled2(true);\n                                            }\n                                        }}\n                                        color=\"primary\">\n                                        Save\n                                    </Button>\n                                    : null}\n                            </Grid>\n\n                        </Grid>\n                    </div>\n                </Grid>\n                :\n                null\n\n            }\n            <Grid xs={12}>\n\n                {props.company ? <div style={{ padding: \"15px\", margin: \"25px 0\", color: theme.palette.secondary.dark }}>\n                    <Typography gutterBottom variant=\"h5\">\n                        {props.company.company_name}\n                    </Typography>\n                    {props.company.phone ?\n                        <Typography variant=\"body1\">\n                            Phone: {props.company.phone}\n                        </Typography>\n                        : null\n                    }\n                    {props.company.gstin ?\n                        <Typography variant=\"body1\">\n                            GSTIN: {props.company.gstin}\n                        </Typography>\n                        : null\n                    }\n                    {props.company.company_pan ?\n                        <Typography variant=\"body1\">\n                            Company PAN: {props.company.company_pan}\n                        </Typography>\n                        : null\n                    }\n                    {props.company.tan ?\n                        <Typography variant=\"body1\">\n                            Company TAN: {props.company.tan}\n                        </Typography>\n                        : null\n                    }\n                    <Typography gutterBottom variant=\"body1\">\n                        {props.company.address}, {props.company.state} (PIN : {props.company.pincode})\n                                </Typography>\n                </div> : null}\n            </Grid>\n        </Grid >\n    </div >\n}\n\n\nfunction LogIn(props) {\n    let [password, setPassword] = React.useState(\"\");\n    let [phone, setPhone] = React.useState(\"\");\n    let [message, setMessage] = React.useState(\"\");\n    let [enabled, setEnabled] = React.useState(true);\n    let theme = useTheme();\n    return <div style={{ padding: \"75px 10px\" }}>\n        <Grid container justify=\"center\">\n            <Grid item xs={12}>\n                <div >\n                    <Typography align=\"center\" style={{ color: theme.palette.primary.main }} variant=\"h4\">{props.site && props.site.name ? props.site.name : \"Log In\"}</Typography>\n                    <div style={{ margin: \"15px\" }}>\n                        {props.site && props.site.logo ? <img style={{ maxHeight: \"150px\", maxWidth: \"480px\" }} src={props.site.logo} /> : <Avatar style={{ position: \"relative\", left: \"50%\", transform: \"translate(-50%,0)\", width: \"150px\", height: \"150px\" }} />}\n                    </div>\n                </div>\n\n                <div style={{ position: \"relative\", margin: \"0 auto\", padding: \"10px\", maxWidth: \"480px\" }} square>\n                    <Typography align=\"left\" color=\"secondary\" gutterBottom variant=\"h6\">\n                        Welcome, please log in to continue!\n                        </Typography>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Phone\"\n                        type=\"phone\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={phone}\n                        onChange={(e) => { setPhone(e.target.value) }}\n                        disabled={!enabled}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Password\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={password}\n                        onChange={(e) => { setPassword(e.target.value) }}\n                        disabled={!enabled}\n                    />\n                    <Typography align=\"left\" color=\"error\" variant=\"body1\">\n                        {message}\n                    </Typography>\n                    <Grid justify=\"left\" container>\n                        <Grid item>\n                            <Button color=\"primary\" disabled={!enabled || password.length < 6 || !(/^([1-9][0-9]{9})$/).test(phone)} onClick={async () => {\n                                password = crypto.createHash('sha1').update(password).digest('base64');\n                                setEnabled(false);\n                                setPassword(password);\n                                let res = await getConnectInstance(false).logIn(phone, password);\n                                if (res.status === \"FAILURE\") {\n                                    setMessage(res.message);\n                                    setPassword(\"\");\n                                    setEnabled(true);\n                                }\n                            }}>Log In</Button>\n                        </Grid>\n                        <Grid item>\n                            <Button color=\"secondary\" disabled={!enabled || !(/^([1-9][0-9]{9})$/).test(phone)} onClick={async () => {\n                                setEnabled(false);\n                                let res = await getConnectInstance(false).forgotPassword(phone);\n                                setMessage(res.message);\n                                setEnabled(true);\n                            }}>Forgot Password</Button>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Grid>\n        </Grid >\n    </div >\n}\n\nexport { Profile, LogIn };","import React from 'react';\nimport './App.css';\nimport ResponsiveDrawer from './components/drawer';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Users } from './components/management';\nimport { AEPS, Transactions, Balance, getRDService, AddBalance, DMT } from './components/cash';\nimport { Profile, LogIn } from './components/profile';\nimport { getConnectInstance } from './connect';\nimport { Grid, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { Instructions, Statistics, Apps, Heading, Partners, PartnersPan } from './components/dashboard';\nclass App extends React.Component {\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      profile: null,\n      bankDetails: null,\n      loggedIn: false,\n      states: null,\n      site: null,\n      geoData: false,\n      rdDetails: false,\n      balance: 0,\n      theme: null\n    };\n\n    this.setState = this.setState.bind(this);\n    this.timedRDChecker = this.timedRDChecker.bind(this);\n    this.timedNetChecker = this.timedNetChecker.bind(this);\n  }\n  async componentDidMount() {\n\n    (async () => {\n      let res = await (await fetch('https://fingpayap.tapits.in/fpaepsservice/api/bankdata/bank/details')).json();\n      if (res.statusCode === 0) {\n        this.setState({ bankDetails: res.data });\n      }\n    })();\n\n    (async () => {\n      let res = await (await fetch('https://fingpayap.tapits.in/fpaepsweb/api/onboarding/getstates')).json();\n      this.setState({ states: res });\n    })();\n    (async () => {\n      if ('geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition((position) => {\n          let { latitude, longitude } = position.coords;\n          localStorage.setItem('geoData', JSON.stringify({ latitude, longitude }));\n          this.setState({ geoData: position.coords });\n        }, () => {\n          let geoData = JSON.parse(localStorage.getItem('geoData'));\n          this.setState({ geoData });\n        }, { timeout: 300000 });\n      }\n    })();\n    this.rdTimer = setInterval(() => {\n      this.timedRDChecker();\n    }, 300000);\n    this.timedRDChecker();\n    this.netTimer = setInterval(() => {\n      this.timedNetChecker();\n    }, 120000);\n    this.timedNetChecker();\n  }\n  async timedRDChecker() {\n    getRDService().startRDInfo((details) => { this.setState({ rdDetails: details }); });\n  }\n  async timedNetChecker() {\n    getConnectInstance((state) => { this.setState(state) });\n    try {\n      let site = await getConnectInstance(false).getSite();\n      this.setState({ site });\n    }\n    catch (err) {\n      this.setState({ site: false })\n    }\n  }\n\n  render() {\n    let theme = null;\n    document.title = (this.state.profile && this.state.profile.whitelabel) ? this.state.profile.whitelabel.name : (this.state.site ? this.state.site.name : \"Suppl Client\");\n    let colors = (this.state.profile && this.state.profile.whitelabel) ? (this.state.profile.whitelabel.colors ? this.state.profile.whitelabel.colors.split(',') : null) : null;\n    if (!(colors && colors.length === 6)) colors = (this.state.site && this.state.site.colors) ? this.state.site.colors.split(',') : null;\n    if (colors && colors.length === 6) {\n      theme = createMuiTheme({\n        palette: {\n          primary: { main: colors[0] },\n          secondary: { main: colors[1] },\n          error: { main: colors[2] },\n          warning: { main: colors[3] },\n          info: { main: colors[4] },\n          success: { main: colors[5] }\n        }\n      });\n    }\n    return (\n      <div className=\"App\">\n        <ThemeProvider theme={this.state.theme ? this.state.theme : theme}>\n          <BrowserRouter>\n            <ResponsiveDrawer {...this.state}>\n              {this.state.loggedIn ?\n                <Switch>\n                  <Route path=\"/\" exact>\n                    <Grid alignContent=\"stretch\" direction=\"row\" container>\n                      <Grid item xs={12} lg={8}>\n                        <Heading profile={this.state.profile} site={this.state.site} />\n                        <Apps profile={this.state.profile} site={this.state.site} />\n                        <Statistics profile={this.state.profile} site={this.state.site} />\n                      </Grid>\n                      <Grid item xs={12} lg={4}>\n                        <Instructions profile={this.state.profile} site={this.state.site} />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <PartnersPan />\n                      </Grid>\n                    </Grid>\n                  </Route>\n                  <Route path=\"/management\" exact>\n                    <Users {...this.state.profile} geoData={this.state.geoData} states={this.state.states} />\n                  </Route>\n                  <Route path=\"/approve\" exact>\n                    <AddBalance />\n                  </Route>\n                  <Route path=\"/cash\" exact>\n                    <Grid alignContent=\"stretch\" direction=\"row\" container>\n                      <Grid item xs={12} lg={8}>\n                        <AEPS profile={this.state.profile} geodata={this.state.geoData} rdDetails={this.state.rdDetails} bankDetails={this.state.bankDetails} />\n                      </Grid>\n                      <Grid item xs={12} lg={4}>\n                        <Instructions profile={this.state.profile} site={this.state.site} />\n                      </Grid>\n                    </Grid>\n\n                  </Route>\n                  <Route path=\"/history\" exact>\n                    <Transactions bankDetails={this.state.bankDetails} />\n                  </Route>\n                  <Route path=\"/transfer\" exact>\n                    <DMT />\n                  </Route>\n                  <Route path=\"/balance\" exact>\n                    <Balance bankDetails={this.state.bankDetails} />\n                  </Route>\n                  <Route path=\"/account\" exact>\n                    <Profile geodata={this.state.geoData} setColor={(colors) => this.setState({\n                      theme: colors ? createMuiTheme({\n                        palette: {\n                          primary: { main: colors[0] },\n                          secondary: { main: colors[1] },\n                          error: { main: colors[2] },\n                          warning: { main: colors[3] },\n                          info: { main: colors[4] },\n                          success: { main: colors[5] }\n                        }\n                      }) : null\n                    })} states={this.state.states} {...this.state.profile} />\n                  </Route>\n                </Switch>\n                :\n                <Switch>\n                  <Route path=\"/\">\n                    <div>\n                      <LogIn site={this.state.site} />\n                      <PartnersPan />\n                    </div>\n                  </Route>\n                </Switch>\n              }\n              <div style={{ height: \"50px\" }} />\n            </ResponsiveDrawer>\n          </BrowserRouter>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { getRDService } from './components/cash';\nwindow.rDService = getRDService();\n\nif (!window.AndroidRDService && document.location.protocol !== 'https:' && document.location.hostname !== 'localhost') document.location.assign(\"https://\" + document.location.hostname);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}